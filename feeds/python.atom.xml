<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jack McKew's Blog - Python</title><link href="https://jackmckew.dev/" rel="alternate"></link><link href="https://jackmckew.dev/feeds/python.atom.xml" rel="self"></link><id>https://jackmckew.dev/</id><updated>2020-10-16T00:00:00+11:00</updated><subtitle>Engineer | Software Developer | Data Scientist</subtitle><entry><title>Property Based Testing in Python</title><link href="https://jackmckew.dev/property-based-testing-in-python.html" rel="alternate"></link><published>2020-10-16T00:00:00+11:00</published><updated>2020-10-16T00:00:00+11:00</updated><author><name>Jack McKew</name></author><id>tag:jackmckew.dev,2020-10-16:/property-based-testing-in-python.html</id><summary type="html">&lt;body&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Building software can be challenging, but maintaining it after that initial build can be even moreso. Being able to test the software such that it verifies the software behaves as expected is crucial in building robust software applications that users depend upon, being able to automate this testing is even …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;</summary><content type="html">&lt;body&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Building software can be challenging, but maintaining it after that initial build can be even moreso. Being able to test the software such that it verifies the software behaves as expected is crucial in building robust software applications that users depend upon, being able to automate this testing is even better! There's other blog posts on this blog around the topic of testing &lt;a href="https://jackmckew.dev/introduction-to-pytest-pipenv.html"&gt;Introduction to Pytest &amp;amp; Pipenv&lt;/a&gt;, but for this post we're going to focus on a very specific type of testing, &lt;strong&gt;property based testing&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Property based testing differs itself from the conventional example based testing by being able to generate the test data that drives your tests, and even better, can help find the boundaries of where the tests fail.&lt;/p&gt;
&lt;p&gt;To demonstrate the power of property based testing, we're going to build some testing for the old faithful multiplication operator in Python.&lt;/p&gt;
&lt;p&gt;To help with this, we are going to use a few packages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pytest (testing framework)&lt;/li&gt;
&lt;li&gt;hypothesis (property testing package)&lt;/li&gt;
&lt;li&gt;ipytest (to enable running tests in jupyter notebooks)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before we dive in, let's set up ipytest and use some &lt;strong&gt;example-based testing&lt;/strong&gt; to verify the multiplication operator.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [5]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ipytest&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pytest&lt;/span&gt;
&lt;span class="n"&gt;ipytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;autoconfig&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number_2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;number_1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;number_2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [6]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="k"&gt;run_pytest&lt;/span&gt;[clean]

def test_example():
    assert multiply(3,3) == 9
    assert multiply(5,5) == 25
    assert multiply(4,6) == 24
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;.                                                                        [100%]
1 passed in 0.02s
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Fantastic, our examples passed the test! Now let's ensure that the test fails.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [7]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="k"&gt;run_pytest&lt;/span&gt;[clean]

def test_fail_example():
    assert multiply(3,3) == 9
    assert multiply(3,5) == 150
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;F                                                                        [100%]
================================== FAILURES ===================================
______________________________ test_fail_example ______________________________

    def test_fail_example():
        assert multiply(3,3) == 9
&amp;gt;       assert multiply(3,5) == 150
E       assert 15 == 150
E        +  where 15 = multiply(3, 5)

&amp;lt;ipython-input-7-212df0aaa8ed&amp;gt;:3: AssertionError
=========================== short test summary info ===========================
FAILED tmpg6kq2sek.py::test_fail_example - assert 15 == 150
1 failed in 0.34s
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Perfect! We can see that the test fails as expected and even nicely tells us which line of code it failed on. Let's say we had lots of these examples that we wanted to test for, so to simplify it we could potentially use pytest's &lt;strong&gt;parametrize&lt;/strong&gt; decorator.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [8]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="k"&gt;run_pytest&lt;/span&gt;[clean]

@pytest.mark.parametrize('number_1, number_2 , expected', [
    (3,3,9),
    (5,5,25),
    (4,6,24)
])
def test_multiply(number_1,number_2,expected):
    assert expected == multiply(number_1,number_2)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;...                                                                      [100%]
3 passed in 0.02s
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Is this enough testing to verify our function? Really, we're only testing a few conditions that we'd expect to work, but in reality it's the ones that nobody foresees that would be ideal to capture in our tests. This also raises a few more things, the developer writing the tests may choose to write 2 or 2000 test cases but this doesn't guarantee anything when it comes to if it's truly covered.&lt;/p&gt;
&lt;h2 id="Introduce-Property-Based-Testing"&gt;Introduce Property Based Testing&lt;a class="anchor-link" href="#Introduce-Property-Based-Testing"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Property based testing is considered as generative testing, we don't supply specific examples with inputs and expected outputs. Rather we define certain properties and generate randomized inputs to ensure the properties are correct. In addition to this, property based testing can also &lt;code&gt;shrink&lt;/code&gt; outputs to find the exact boundary condition where a test fails.&lt;/p&gt;
&lt;p&gt;While this doesn't 100% replace example-based testing, they definitely have their use and have a lot of potential for effective testing. Now let's implement the same tests above, using property based testing with &lt;code&gt;hypothesis&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [9]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;hypothesis&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;given&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;hypothesis.strategies&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;st&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [10]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="k"&gt;run_pytest&lt;/span&gt;[clean]

@given(st.integers(),st.integers())
def test_multiply(number_1,number_2):
    assert multiply(number_1,number_2) == number_1 * number_2
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;.                                                                        [100%]
1 passed in 0.14s
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Note that we've used the &lt;code&gt;given&lt;/code&gt; decorator which makes our test parametrized, and use strategies which cover the types of input data to generate. As per the hypothesis documentation &lt;em&gt;Most things should be easy to generate and everything should be possible&lt;/em&gt;, we can find more information on them here: &lt;a href="https://hypothesis.readthedocs.io/en/latest/data.html"&gt;https://hypothesis.readthedocs.io/en/latest/data.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now this doesn't look any different to last time, so what even changed! Let's change our multiply function so it behaves strangely and see if we can see hypothesis shrink the failures in action. Shrinking is whenever it finds a failure, it'll try to get to the absolute boundary case to help us find the potential cause and even better it'll remember this failure for next time so it doesn't poke it's head up again!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [15]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;bad_multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;number_2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;number_1&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;number_2&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;number_1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;number_2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [16]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="k"&gt;run_pytest&lt;/span&gt;[clean]

@given(st.integers(),st.integers())
def test_bad_multiply(number_1,number_2):
    assert bad_multiply(number_1,number_2) == number_1 * number_2
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;F                                                                        [100%]
================================== FAILURES ===================================
______________________________ test_bad_multiply ______________________________

    @given(st.integers(),st.integers())
&amp;gt;   def test_bad_multiply(number_1,number_2):

&amp;lt;ipython-input-16-3e2ec463c8ad&amp;gt;:2: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

number_1 = 31, number_2 = 1

    @given(st.integers(),st.integers())
    def test_bad_multiply(number_1,number_2):
&amp;gt;       assert bad_multiply(number_1,number_2) == number_1 * number_2
E       assert 0 == (31 * 1)
E        +  where 0 = bad_multiply(31, 1)

&amp;lt;ipython-input-16-3e2ec463c8ad&amp;gt;:3: AssertionError
--------------------------------- Hypothesis ----------------------------------
Falsifying example: test_bad_multiply(
    number_1=31, number_2=1,
)
=========================== short test summary info ===========================
FAILED tmp8uis7_kv.py::test_bad_multiply - assert 0 == (31 * 1)
1 failed in 0.22s
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Fantastic, we can see that the failure has been shrunken to &lt;code&gt;number_1&lt;/code&gt; being 31 and &lt;code&gt;number_2&lt;/code&gt; being 1 which is one integer off the 'bad' boundary conditions we'd introduced into the multiply function.&lt;/p&gt;
&lt;p&gt;Hopefully this has introduced the power of property based testing and can help make software more robust for everyone!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/body&gt;</content><category term="Python"></category><category term="python"></category><category term="software-development"></category></entry><entry><title>Shallow vs Deep Copy in Python</title><link href="https://jackmckew.dev/shallow-vs-deep-copy-in-python.html" rel="alternate"></link><published>2020-10-09T00:00:00+11:00</published><updated>2020-10-09T00:00:00+11:00</updated><author><name>Jack McKew</name></author><id>tag:jackmckew.dev,2020-10-09:/shallow-vs-deep-copy-in-python.html</id><summary type="html">&lt;body&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Shallow-vs-Deep-Copy-in-Python"&gt;Shallow vs Deep Copy in Python&lt;a class="anchor-link" href="#Shallow-vs-Deep-Copy-in-Python"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;One of the utmost crucial parts in all programming languages is maintaining variables. We create, modify, compare, delete our variables to build more complex systems that eventually make up the software we use. This is typically done by using the &lt;code&gt;=&lt;/code&gt; operator (eg &lt;code&gt;x = 5 …&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;</summary><content type="html">&lt;body&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Shallow-vs-Deep-Copy-in-Python"&gt;Shallow vs Deep Copy in Python&lt;a class="anchor-link" href="#Shallow-vs-Deep-Copy-in-Python"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;One of the utmost crucial parts in all programming languages is maintaining variables. We create, modify, compare, delete our variables to build more complex systems that eventually make up the software we use. This is typically done by using the &lt;code&gt;=&lt;/code&gt; operator (eg &lt;code&gt;x = 5&lt;/code&gt;), but sometimes this doesn't always do what we expect. This is going to be a deep  dive into different types of &lt;code&gt;copy&lt;/code&gt; in Python.&lt;/p&gt;
&lt;p&gt;When we say &lt;code&gt;x = 5&lt;/code&gt;, we're actually not creating a new object (as in object oriented software), we're creating a binding between a target and an object. We can see this in action by using the &lt;code&gt;id()&lt;/code&gt; function on our variables to see the 'identity' of an object.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [1]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;140711684720416
140711684720416
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;As we can see, both &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;5&lt;/code&gt; share an 'identity' meaning they are both the same object and the variable is merely a 'pointer' to the right object.&lt;/p&gt;
&lt;p&gt;But sometimes we actually want to create a new object, and this comes into using the &lt;code&gt;copy&lt;/code&gt; module. But even with &lt;code&gt;copy&lt;/code&gt; there's still 2 types of copy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;shallow copy&lt;/li&gt;
&lt;li&gt;deep copy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's take a look at this a bit closer, we'll start by creating a list (an object itself), with some integer elements and an embedded list.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [2]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"A contents: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;A contents:  [1, 2, [3, 4], 5]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Now similar to our &lt;code&gt;x = 5&lt;/code&gt; example before, let's assign a new variable &lt;code&gt;B&lt;/code&gt; and set it to &lt;code&gt;A&lt;/code&gt; to see what happens to the identities.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [3]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"A's object id is &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"B's object id is &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;A's object id is 2392779886784
B's object id is 2392779886784
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Funnily enough, the ids are the same! Meaning they are both the same object. This would mean if we were to modify the contents of the elements in &lt;code&gt;A&lt;/code&gt;, the same modifications would be made in &lt;code&gt;B&lt;/code&gt;, which is not obvious.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [4]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Let's modify A[2][0] = 100"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"A contents: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"B contents: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Is A == B? "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Let's modify A[2][0] = 100
A contents:  [1, 2, [100, 4], 5]
B contents:  [1, 2, [100, 4], 5]
Is A == B?  True
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Now if we were trying to use &lt;code&gt;B&lt;/code&gt; as a separate entity to &lt;code&gt;A&lt;/code&gt; this could cause all sorts of grief, and be very difficult to track down.&lt;/p&gt;
&lt;p&gt;Let's reset our variable(s) back to it's original state so we can see how shallow &amp;amp; deep copies could change this behaviour.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [5]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Let's reset A[2][0] = 3"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Let's reset A[2][0] = 3
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Shallow-Copy"&gt;Shallow Copy&lt;a class="anchor-link" href="#Shallow-Copy"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [6]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;copy&lt;/span&gt;

&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"A's object id is &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"C's object id is &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;A's object id is 2392779886784
C's object id is 2392779896256
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Fantastic! Now we can see that our &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; have separate identities, now we would expect this to behave like separate entities, right? Unfortunately not, while this does have a use case, the contents inside the list still have matching identities, meaning if we modify the contents of &lt;code&gt;C&lt;/code&gt;, it'll be reflected in &lt;code&gt;A&lt;/code&gt;, again a not obvious behaviour. But this is known as a shallow copy, meaning a new object is created but it still references the original data.&lt;/p&gt;
&lt;p&gt;Let's demonstrate this by modifying one of the elements, and seeing if it's reflected in both variables.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [7]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"A[2][0]'s object id is &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"C[2][0]'s object id is &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Let's modify C[2][0] = 100 (note if this was not an embedded list this will creates a new instance of the C[0] element and won't update original list)"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"A contents: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"C contents: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Is A == C? "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Is A[2][0] == C[2][0]? "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;A[2][0]'s object id is 140711684720352
C[2][0]'s object id is 140711684720352
Let's modify C[2][0] = 100 (note if this was not an embedded list this will creates a new instance of the C[0] element and won't update original list)
A contents:  [1, 2, [100, 4], 5]
C contents:  [1, 2, [100, 4], 5]
Is A == C?  True
Is A[2][0] == C[2][0]?  True
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;But why are we using an embedded list specifically? This is one percularity, that like most things in this blog post, isn't obvious. Note that if we modified the contents of an element in the shallow copy that was an integer, it wou;dn't be reflected in both variables. Let's try this out.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [8]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"A[1]'s object id is &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"C[1]'s object id is &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Let's modify C[1] = 100"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"A contents: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"C contents: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Is A == C? "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Is A[1] == C[1]? "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;A[1]'s object id is 140711684720320
C[1]'s object id is 140711684720320
Let's modify C[1] = 100
A contents:  [1, 2, [100, 4], 5]
C contents:  [1, 100, [100, 4], 5]
Is A == C?  False
Is A[1] == C[1]?  False
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;This is due to the fact that the only difference between shallow and deep copies is for compound objects (objects that contain other objects, like lists within lists).&lt;/p&gt;
&lt;p&gt;Next let's reset our list, and take a look at deep copy.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [9]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Let's reset A[2][0] = 3 and A[1] = 2"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Let's reset A[2][0] = 3 and A[1] = 2
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Deep-Copy"&gt;Deep Copy&lt;a class="anchor-link" href="#Deep-Copy"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Now we're at the deep copy, and as we'd expect it creates a completely new object, and recursively creates new objects for embedded objects (compound objects). This means when we edit anything inside one of these compound objects, the changes won't be reflected in the other object as we'd sometimes originally expect. Let's demonstrate this.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [10]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Let's do a deep copy"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deepcopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"A's object id is &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"D's object id is &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Let's modify A[2][0] = 100"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Let's do a deep copy
A's object id is 2392779886784
D's object id is 2392779846656
Let's modify A[2][0] = 100
[1, 2, [100, 4], 5]
[1, 2, [3, 4], 5]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Hopefully being aware of how the default behaviour works, and the potential solutions will help when debugging strange behaviour when using variables in Python!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/body&gt;</content><category term="Data Science"></category><category term="datascience"></category><category term="python"></category></entry><entry><title>Types of Averages (Means)</title><link href="https://jackmckew.dev/types-of-averages-means.html" rel="alternate"></link><published>2020-08-21T00:00:00+10:00</published><updated>2020-08-21T00:00:00+10:00</updated><author><name>Jack McKew</name></author><id>tag:jackmckew.dev,2020-08-21:/types-of-averages-means.html</id><summary type="html">&lt;body&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The most common analytical task is to take a bunch of numbers in dataset and summarise it with fewer numbers, preferably a single number. Enter the 'average', sum all the numbers and divide by the count of the numbers. In mathematical terms this is known as the 'arithmetic mean', and …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;</summary><content type="html">&lt;body&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The most common analytical task is to take a bunch of numbers in dataset and summarise it with fewer numbers, preferably a single number. Enter the 'average', sum all the numbers and divide by the count of the numbers. In mathematical terms this is known as the 'arithmetic mean', and doesn't always summarise a dataset correctly. This post looks into the other types of ways that we can summarise a dataset.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The proper term for this method of summarising is determining the central tendency of the dataset.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Generate-The-Data"&gt;Generate The Data&lt;a class="anchor-link" href="#Generate-The-Data"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;First step is to generate a dataset to summarise, to do this we use the &lt;code&gt;random&lt;/code&gt; package from the standard library. Using matplotlib we can plot our 'number line'.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [2]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt;

&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;typing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;plot_1d_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;typing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;constant_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;constant_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'x'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plot_1d_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;[82, 15, 4, 95, 36, 32, 29, 18, 95, 14, 87, 95, 70, 12, 76, 55, 5, 4, 12, 28, 30, 65, 78, 4, 72, 26, 92, 84, 90, 70, 54, 29, 58, 76, 36, 1, 98, 21, 90, 55, 44, 36, 20, 28, 98, 44, 14, 12, 49, 13]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_svg output_subarea"&gt;
&lt;!--?xml version="1.0" encoding="utf-8" standalone="no"?--&gt;
&lt;!-- Created with matplotlib (https://matplotlib.org/) --&gt;
&lt;svg height="248.518125pt" version="1.1" viewbox="0 0 372.704232 248.518125" width="372.704232pt" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;
&lt;defs&gt;
&lt;style type="text/css"&gt;
*{stroke-linecap:butt;stroke-linejoin:round;}
  &lt;/style&gt;
&lt;/defs&gt;
&lt;g id="figure_1"&gt;
&lt;g id="patch_1"&gt;
&lt;path d="M 0 248.518125 
L 372.704232 248.518125 
L 372.704232 0 
L 0 0 
z
" style="fill:none;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="axes_1"&gt;
&lt;g id="patch_2"&gt;
&lt;path d="M 30.103125 224.64 
L 364.903125 224.64 
L 364.903125 7.2 
L 30.103125 7.2 
z
" style="fill:#ffffff;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="matplotlib.axis_1"&gt;
&lt;g id="xtick_1"&gt;
&lt;g id="line2d_1"&gt;
&lt;defs&gt;
&lt;path d="M 0 0 
L 0 3.5 
" id="m2b737f4ad0" style="stroke:#000000;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="42.183537" xlink:href="#m2b737f4ad0" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_1"&gt;
&lt;!-- 0 --&gt;
&lt;defs&gt;
&lt;path d="M 31.78125 66.40625 
Q 24.171875 66.40625 20.328125 58.90625 
Q 16.5 51.421875 16.5 36.375 
Q 16.5 21.390625 20.328125 13.890625 
Q 24.171875 6.390625 31.78125 6.390625 
Q 39.453125 6.390625 43.28125 13.890625 
Q 47.125 21.390625 47.125 36.375 
Q 47.125 51.421875 43.28125 58.90625 
Q 39.453125 66.40625 31.78125 66.40625 
z
M 31.78125 74.21875 
Q 44.046875 74.21875 50.515625 64.515625 
Q 56.984375 54.828125 56.984375 36.375 
Q 56.984375 17.96875 50.515625 8.265625 
Q 44.046875 -1.421875 31.78125 -1.421875 
Q 19.53125 -1.421875 13.0625 8.265625 
Q 6.59375 17.96875 6.59375 36.375 
Q 6.59375 54.828125 13.0625 64.515625 
Q 19.53125 74.21875 31.78125 74.21875 
z
" id="DejaVuSans-48"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(39.002287 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_2"&gt;
&lt;g id="line2d_2"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="104.938926" xlink:href="#m2b737f4ad0" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_2"&gt;
&lt;!-- 20 --&gt;
&lt;defs&gt;
&lt;path d="M 19.1875 8.296875 
L 53.609375 8.296875 
L 53.609375 0 
L 7.328125 0 
L 7.328125 8.296875 
Q 12.9375 14.109375 22.625 23.890625 
Q 32.328125 33.6875 34.8125 36.53125 
Q 39.546875 41.84375 41.421875 45.53125 
Q 43.3125 49.21875 43.3125 52.78125 
Q 43.3125 58.59375 39.234375 62.25 
Q 35.15625 65.921875 28.609375 65.921875 
Q 23.96875 65.921875 18.8125 64.3125 
Q 13.671875 62.703125 7.8125 59.421875 
L 7.8125 69.390625 
Q 13.765625 71.78125 18.9375 73 
Q 24.125 74.21875 28.421875 74.21875 
Q 39.75 74.21875 46.484375 68.546875 
Q 53.21875 62.890625 53.21875 53.421875 
Q 53.21875 48.921875 51.53125 44.890625 
Q 49.859375 40.875 45.40625 35.40625 
Q 44.1875 33.984375 37.640625 27.21875 
Q 31.109375 20.453125 19.1875 8.296875 
z
" id="DejaVuSans-50"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(98.576426 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-50"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_3"&gt;
&lt;g id="line2d_3"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="167.694315" xlink:href="#m2b737f4ad0" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_3"&gt;
&lt;!-- 40 --&gt;
&lt;defs&gt;
&lt;path d="M 37.796875 64.3125 
L 12.890625 25.390625 
L 37.796875 25.390625 
z
M 35.203125 72.90625 
L 47.609375 72.90625 
L 47.609375 25.390625 
L 58.015625 25.390625 
L 58.015625 17.1875 
L 47.609375 17.1875 
L 47.609375 0 
L 37.796875 0 
L 37.796875 17.1875 
L 4.890625 17.1875 
L 4.890625 26.703125 
z
" id="DejaVuSans-52"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(161.331815 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_4"&gt;
&lt;g id="line2d_4"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="230.449704" xlink:href="#m2b737f4ad0" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_4"&gt;
&lt;!-- 60 --&gt;
&lt;defs&gt;
&lt;path d="M 33.015625 40.375 
Q 26.375 40.375 22.484375 35.828125 
Q 18.609375 31.296875 18.609375 23.390625 
Q 18.609375 15.53125 22.484375 10.953125 
Q 26.375 6.390625 33.015625 6.390625 
Q 39.65625 6.390625 43.53125 10.953125 
Q 47.40625 15.53125 47.40625 23.390625 
Q 47.40625 31.296875 43.53125 35.828125 
Q 39.65625 40.375 33.015625 40.375 
z
M 52.59375 71.296875 
L 52.59375 62.3125 
Q 48.875 64.0625 45.09375 64.984375 
Q 41.3125 65.921875 37.59375 65.921875 
Q 27.828125 65.921875 22.671875 59.328125 
Q 17.53125 52.734375 16.796875 39.40625 
Q 19.671875 43.65625 24.015625 45.921875 
Q 28.375 48.1875 33.59375 48.1875 
Q 44.578125 48.1875 50.953125 41.515625 
Q 57.328125 34.859375 57.328125 23.390625 
Q 57.328125 12.15625 50.6875 5.359375 
Q 44.046875 -1.421875 33.015625 -1.421875 
Q 20.359375 -1.421875 13.671875 8.265625 
Q 6.984375 17.96875 6.984375 36.375 
Q 6.984375 53.65625 15.1875 63.9375 
Q 23.390625 74.21875 37.203125 74.21875 
Q 40.921875 74.21875 44.703125 73.484375 
Q 48.484375 72.75 52.59375 71.296875 
z
" id="DejaVuSans-54"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(224.087204 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-54"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_5"&gt;
&lt;g id="line2d_5"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="293.205093" xlink:href="#m2b737f4ad0" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_5"&gt;
&lt;!-- 80 --&gt;
&lt;defs&gt;
&lt;path d="M 31.78125 34.625 
Q 24.75 34.625 20.71875 30.859375 
Q 16.703125 27.09375 16.703125 20.515625 
Q 16.703125 13.921875 20.71875 10.15625 
Q 24.75 6.390625 31.78125 6.390625 
Q 38.8125 6.390625 42.859375 10.171875 
Q 46.921875 13.96875 46.921875 20.515625 
Q 46.921875 27.09375 42.890625 30.859375 
Q 38.875 34.625 31.78125 34.625 
z
M 21.921875 38.8125 
Q 15.578125 40.375 12.03125 44.71875 
Q 8.5 49.078125 8.5 55.328125 
Q 8.5 64.0625 14.71875 69.140625 
Q 20.953125 74.21875 31.78125 74.21875 
Q 42.671875 74.21875 48.875 69.140625 
Q 55.078125 64.0625 55.078125 55.328125 
Q 55.078125 49.078125 51.53125 44.71875 
Q 48 40.375 41.703125 38.8125 
Q 48.828125 37.15625 52.796875 32.3125 
Q 56.78125 27.484375 56.78125 20.515625 
Q 56.78125 9.90625 50.3125 4.234375 
Q 43.84375 -1.421875 31.78125 -1.421875 
Q 19.734375 -1.421875 13.25 4.234375 
Q 6.78125 9.90625 6.78125 20.515625 
Q 6.78125 27.484375 10.78125 32.3125 
Q 14.796875 37.15625 21.921875 38.8125 
z
M 18.3125 54.390625 
Q 18.3125 48.734375 21.84375 45.5625 
Q 25.390625 42.390625 31.78125 42.390625 
Q 38.140625 42.390625 41.71875 45.5625 
Q 45.3125 48.734375 45.3125 54.390625 
Q 45.3125 60.0625 41.71875 63.234375 
Q 38.140625 66.40625 31.78125 66.40625 
Q 25.390625 66.40625 21.84375 63.234375 
Q 18.3125 60.0625 18.3125 54.390625 
z
" id="DejaVuSans-56"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(286.842593 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-56"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_6"&gt;
&lt;g id="line2d_6"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="355.960482" xlink:href="#m2b737f4ad0" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_6"&gt;
&lt;!-- 100 --&gt;
&lt;defs&gt;
&lt;path d="M 12.40625 8.296875 
L 28.515625 8.296875 
L 28.515625 63.921875 
L 10.984375 60.40625 
L 10.984375 69.390625 
L 28.421875 72.90625 
L 38.28125 72.90625 
L 38.28125 8.296875 
L 54.390625 8.296875 
L 54.390625 0 
L 12.40625 0 
z
" id="DejaVuSans-49"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(346.416732 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-49"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;use x="127.246094" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="matplotlib.axis_2"&gt;
&lt;g id="ytick_1"&gt;
&lt;g id="line2d_7"&gt;
&lt;defs&gt;
&lt;path d="M 0 0 
L -3.5 0 
" id="mf7dfe2b2d4" style="stroke:#000000;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#mf7dfe2b2d4" y="194.989091"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_7"&gt;
&lt;!-- 4.8 --&gt;
&lt;defs&gt;
&lt;path d="M 10.6875 12.40625 
L 21 12.40625 
L 21 0 
L 10.6875 0 
z
" id="DejaVuSans-46"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 198.78831)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-56"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_2"&gt;
&lt;g id="line2d_8"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#mf7dfe2b2d4" y="155.454545"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_8"&gt;
&lt;!-- 4.9 --&gt;
&lt;defs&gt;
&lt;path d="M 10.984375 1.515625 
L 10.984375 10.5 
Q 14.703125 8.734375 18.5 7.8125 
Q 22.3125 6.890625 25.984375 6.890625 
Q 35.75 6.890625 40.890625 13.453125 
Q 46.046875 20.015625 46.78125 33.40625 
Q 43.953125 29.203125 39.59375 26.953125 
Q 35.25 24.703125 29.984375 24.703125 
Q 19.046875 24.703125 12.671875 31.3125 
Q 6.296875 37.9375 6.296875 49.421875 
Q 6.296875 60.640625 12.9375 67.421875 
Q 19.578125 74.21875 30.609375 74.21875 
Q 43.265625 74.21875 49.921875 64.515625 
Q 56.59375 54.828125 56.59375 36.375 
Q 56.59375 19.140625 48.40625 8.859375 
Q 40.234375 -1.421875 26.421875 -1.421875 
Q 22.703125 -1.421875 18.890625 -0.6875 
Q 15.09375 0.046875 10.984375 1.515625 
z
M 30.609375 32.421875 
Q 37.25 32.421875 41.125 36.953125 
Q 45.015625 41.5 45.015625 49.421875 
Q 45.015625 57.28125 41.125 61.84375 
Q 37.25 66.40625 30.609375 66.40625 
Q 23.96875 66.40625 20.09375 61.84375 
Q 16.21875 57.28125 16.21875 49.421875 
Q 16.21875 41.5 20.09375 36.953125 
Q 23.96875 32.421875 30.609375 32.421875 
z
" id="DejaVuSans-57"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 159.253764)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-57"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_3"&gt;
&lt;g id="line2d_9"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#mf7dfe2b2d4" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_9"&gt;
&lt;!-- 5.0 --&gt;
&lt;defs&gt;
&lt;path d="M 10.796875 72.90625 
L 49.515625 72.90625 
L 49.515625 64.59375 
L 19.828125 64.59375 
L 19.828125 46.734375 
Q 21.96875 47.46875 24.109375 47.828125 
Q 26.265625 48.1875 28.421875 48.1875 
Q 40.625 48.1875 47.75 41.5 
Q 54.890625 34.8125 54.890625 23.390625 
Q 54.890625 11.625 47.5625 5.09375 
Q 40.234375 -1.421875 26.90625 -1.421875 
Q 22.3125 -1.421875 17.546875 -0.640625 
Q 12.796875 0.140625 7.71875 1.703125 
L 7.71875 11.625 
Q 12.109375 9.234375 16.796875 8.0625 
Q 21.484375 6.890625 26.703125 6.890625 
Q 35.15625 6.890625 40.078125 11.328125 
Q 45.015625 15.765625 45.015625 23.390625 
Q 45.015625 31 40.078125 35.4375 
Q 35.15625 39.890625 26.703125 39.890625 
Q 22.75 39.890625 18.8125 39.015625 
Q 14.890625 38.140625 10.796875 36.28125 
z
" id="DejaVuSans-53"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 119.719219)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_4"&gt;
&lt;g id="line2d_10"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#mf7dfe2b2d4" y="76.385455"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_10"&gt;
&lt;!-- 5.1 --&gt;
&lt;g transform="translate(7.2 80.184673)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-49"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_5"&gt;
&lt;g id="line2d_11"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#mf7dfe2b2d4" y="36.850909"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_11"&gt;
&lt;!-- 5.2 --&gt;
&lt;g transform="translate(7.2 40.650128)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-50"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="line2d_12"&gt;
&lt;defs&gt;
&lt;path d="M -3 3 
L 3 -3 
M -3 -3 
L 3 3 
" id="m9d261a661c" style="stroke:#1f77b4;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g clip-path="url(#p784cd75deb)"&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="299.480632" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="89.250079" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="142.59216" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="133.178851" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="98.663387" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="86.11231" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="315.169479" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="261.827399" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="280.654015" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="214.760857" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="57.872385" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="130.041082" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="136.316621" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="246.138551" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="286.929554" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="268.102938" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="123.765543" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="330.858326" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="305.756171" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="324.582788" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="261.827399" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="211.623088" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="133.178851" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="224.174165" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="280.654015" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="45.321307" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="349.684943" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="108.076696" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="324.582788" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="214.760857" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="180.245393" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="104.938926" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="130.041082" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="349.684943" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="180.245393" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="86.11231" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="195.93424" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="82.97454" xlink:href="#m9d261a661c" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="patch_3"&gt;
&lt;path d="M 30.103125 224.64 
L 30.103125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_4"&gt;
&lt;path d="M 364.903125 224.64 
L 364.903125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_5"&gt;
&lt;path d="M 30.103125 224.64 
L 364.903125 224.64 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_6"&gt;
&lt;path d="M 30.103125 7.2 
L 364.903125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;defs&gt;
&lt;clippath id="p784cd75deb"&gt;
&lt;rect height="217.44" width="334.8" x="30.103125" y="7.2"&gt;&lt;/rect&gt;
&lt;/clippath&gt;
&lt;/defs&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Median"&gt;Median&lt;a class="anchor-link" href="#Median"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The median is the middle number of the sorted list, in the quite literal sense. For example the median of 1,2,3,4,5 is 3; as is the same for 3,2,4,1,5. The median can be more descriptive of the dataset over the arithmetic mean whenever there are significant outliers in the data that skew the arithmetic mean.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;If there is an even amount of numbers in the data, the median becomes the arithmetic mean of the two middle numbers. For example, the median for 1,2,3,4,5,6 is 3.5 (3+4/2).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="When-to-use"&gt;When to use&lt;a class="anchor-link" href="#When-to-use"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Use the median whenever there is a large spread of numbers across the domain&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [3]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;statistics&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"Median: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;statistics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plot_1d_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;statistics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'x'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;markersize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;annotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Median'&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="n"&gt;statistics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="n"&gt;statistics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mf"&gt;5.1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;arrowprops&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'width'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Median: 40.0
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt output_prompt"&gt;Out[3]:&lt;/div&gt;
&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;Text(40.0, 5.1, 'Median')&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_svg output_subarea"&gt;
&lt;!--?xml version="1.0" encoding="utf-8" standalone="no"?--&gt;
&lt;!-- Created with matplotlib (https://matplotlib.org/) --&gt;
&lt;svg height="248.518125pt" version="1.1" viewbox="0 0 372.704232 248.518125" width="372.704232pt" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;
&lt;defs&gt;
&lt;style type="text/css"&gt;
*{stroke-linecap:butt;stroke-linejoin:round;}
  &lt;/style&gt;
&lt;/defs&gt;
&lt;g id="figure_1"&gt;
&lt;g id="patch_1"&gt;
&lt;path d="M 0 248.518125 
L 372.704232 248.518125 
L 372.704232 0 
L 0 0 
z
" style="fill:none;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="axes_1"&gt;
&lt;g id="patch_2"&gt;
&lt;path d="M 30.103125 224.64 
L 364.903125 224.64 
L 364.903125 7.2 
L 30.103125 7.2 
z
" style="fill:#ffffff;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="matplotlib.axis_1"&gt;
&lt;g id="xtick_1"&gt;
&lt;g id="line2d_1"&gt;
&lt;defs&gt;
&lt;path d="M 0 0 
L 0 3.5 
" id="m9d76cd73a6" style="stroke:#000000;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="42.183537" xlink:href="#m9d76cd73a6" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_1"&gt;
&lt;!-- 0 --&gt;
&lt;defs&gt;
&lt;path d="M 31.78125 66.40625 
Q 24.171875 66.40625 20.328125 58.90625 
Q 16.5 51.421875 16.5 36.375 
Q 16.5 21.390625 20.328125 13.890625 
Q 24.171875 6.390625 31.78125 6.390625 
Q 39.453125 6.390625 43.28125 13.890625 
Q 47.125 21.390625 47.125 36.375 
Q 47.125 51.421875 43.28125 58.90625 
Q 39.453125 66.40625 31.78125 66.40625 
z
M 31.78125 74.21875 
Q 44.046875 74.21875 50.515625 64.515625 
Q 56.984375 54.828125 56.984375 36.375 
Q 56.984375 17.96875 50.515625 8.265625 
Q 44.046875 -1.421875 31.78125 -1.421875 
Q 19.53125 -1.421875 13.0625 8.265625 
Q 6.59375 17.96875 6.59375 36.375 
Q 6.59375 54.828125 13.0625 64.515625 
Q 19.53125 74.21875 31.78125 74.21875 
z
" id="DejaVuSans-48"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(39.002287 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_2"&gt;
&lt;g id="line2d_2"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="104.938926" xlink:href="#m9d76cd73a6" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_2"&gt;
&lt;!-- 20 --&gt;
&lt;defs&gt;
&lt;path d="M 19.1875 8.296875 
L 53.609375 8.296875 
L 53.609375 0 
L 7.328125 0 
L 7.328125 8.296875 
Q 12.9375 14.109375 22.625 23.890625 
Q 32.328125 33.6875 34.8125 36.53125 
Q 39.546875 41.84375 41.421875 45.53125 
Q 43.3125 49.21875 43.3125 52.78125 
Q 43.3125 58.59375 39.234375 62.25 
Q 35.15625 65.921875 28.609375 65.921875 
Q 23.96875 65.921875 18.8125 64.3125 
Q 13.671875 62.703125 7.8125 59.421875 
L 7.8125 69.390625 
Q 13.765625 71.78125 18.9375 73 
Q 24.125 74.21875 28.421875 74.21875 
Q 39.75 74.21875 46.484375 68.546875 
Q 53.21875 62.890625 53.21875 53.421875 
Q 53.21875 48.921875 51.53125 44.890625 
Q 49.859375 40.875 45.40625 35.40625 
Q 44.1875 33.984375 37.640625 27.21875 
Q 31.109375 20.453125 19.1875 8.296875 
z
" id="DejaVuSans-50"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(98.576426 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-50"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_3"&gt;
&lt;g id="line2d_3"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="167.694315" xlink:href="#m9d76cd73a6" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_3"&gt;
&lt;!-- 40 --&gt;
&lt;defs&gt;
&lt;path d="M 37.796875 64.3125 
L 12.890625 25.390625 
L 37.796875 25.390625 
z
M 35.203125 72.90625 
L 47.609375 72.90625 
L 47.609375 25.390625 
L 58.015625 25.390625 
L 58.015625 17.1875 
L 47.609375 17.1875 
L 47.609375 0 
L 37.796875 0 
L 37.796875 17.1875 
L 4.890625 17.1875 
L 4.890625 26.703125 
z
" id="DejaVuSans-52"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(161.331815 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_4"&gt;
&lt;g id="line2d_4"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="230.449704" xlink:href="#m9d76cd73a6" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_4"&gt;
&lt;!-- 60 --&gt;
&lt;defs&gt;
&lt;path d="M 33.015625 40.375 
Q 26.375 40.375 22.484375 35.828125 
Q 18.609375 31.296875 18.609375 23.390625 
Q 18.609375 15.53125 22.484375 10.953125 
Q 26.375 6.390625 33.015625 6.390625 
Q 39.65625 6.390625 43.53125 10.953125 
Q 47.40625 15.53125 47.40625 23.390625 
Q 47.40625 31.296875 43.53125 35.828125 
Q 39.65625 40.375 33.015625 40.375 
z
M 52.59375 71.296875 
L 52.59375 62.3125 
Q 48.875 64.0625 45.09375 64.984375 
Q 41.3125 65.921875 37.59375 65.921875 
Q 27.828125 65.921875 22.671875 59.328125 
Q 17.53125 52.734375 16.796875 39.40625 
Q 19.671875 43.65625 24.015625 45.921875 
Q 28.375 48.1875 33.59375 48.1875 
Q 44.578125 48.1875 50.953125 41.515625 
Q 57.328125 34.859375 57.328125 23.390625 
Q 57.328125 12.15625 50.6875 5.359375 
Q 44.046875 -1.421875 33.015625 -1.421875 
Q 20.359375 -1.421875 13.671875 8.265625 
Q 6.984375 17.96875 6.984375 36.375 
Q 6.984375 53.65625 15.1875 63.9375 
Q 23.390625 74.21875 37.203125 74.21875 
Q 40.921875 74.21875 44.703125 73.484375 
Q 48.484375 72.75 52.59375 71.296875 
z
" id="DejaVuSans-54"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(224.087204 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-54"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_5"&gt;
&lt;g id="line2d_5"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="293.205093" xlink:href="#m9d76cd73a6" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_5"&gt;
&lt;!-- 80 --&gt;
&lt;defs&gt;
&lt;path d="M 31.78125 34.625 
Q 24.75 34.625 20.71875 30.859375 
Q 16.703125 27.09375 16.703125 20.515625 
Q 16.703125 13.921875 20.71875 10.15625 
Q 24.75 6.390625 31.78125 6.390625 
Q 38.8125 6.390625 42.859375 10.171875 
Q 46.921875 13.96875 46.921875 20.515625 
Q 46.921875 27.09375 42.890625 30.859375 
Q 38.875 34.625 31.78125 34.625 
z
M 21.921875 38.8125 
Q 15.578125 40.375 12.03125 44.71875 
Q 8.5 49.078125 8.5 55.328125 
Q 8.5 64.0625 14.71875 69.140625 
Q 20.953125 74.21875 31.78125 74.21875 
Q 42.671875 74.21875 48.875 69.140625 
Q 55.078125 64.0625 55.078125 55.328125 
Q 55.078125 49.078125 51.53125 44.71875 
Q 48 40.375 41.703125 38.8125 
Q 48.828125 37.15625 52.796875 32.3125 
Q 56.78125 27.484375 56.78125 20.515625 
Q 56.78125 9.90625 50.3125 4.234375 
Q 43.84375 -1.421875 31.78125 -1.421875 
Q 19.734375 -1.421875 13.25 4.234375 
Q 6.78125 9.90625 6.78125 20.515625 
Q 6.78125 27.484375 10.78125 32.3125 
Q 14.796875 37.15625 21.921875 38.8125 
z
M 18.3125 54.390625 
Q 18.3125 48.734375 21.84375 45.5625 
Q 25.390625 42.390625 31.78125 42.390625 
Q 38.140625 42.390625 41.71875 45.5625 
Q 45.3125 48.734375 45.3125 54.390625 
Q 45.3125 60.0625 41.71875 63.234375 
Q 38.140625 66.40625 31.78125 66.40625 
Q 25.390625 66.40625 21.84375 63.234375 
Q 18.3125 60.0625 18.3125 54.390625 
z
" id="DejaVuSans-56"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(286.842593 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-56"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_6"&gt;
&lt;g id="line2d_6"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="355.960482" xlink:href="#m9d76cd73a6" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_6"&gt;
&lt;!-- 100 --&gt;
&lt;defs&gt;
&lt;path d="M 12.40625 8.296875 
L 28.515625 8.296875 
L 28.515625 63.921875 
L 10.984375 60.40625 
L 10.984375 69.390625 
L 28.421875 72.90625 
L 38.28125 72.90625 
L 38.28125 8.296875 
L 54.390625 8.296875 
L 54.390625 0 
L 12.40625 0 
z
" id="DejaVuSans-49"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(346.416732 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-49"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;use x="127.246094" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="matplotlib.axis_2"&gt;
&lt;g id="ytick_1"&gt;
&lt;g id="line2d_7"&gt;
&lt;defs&gt;
&lt;path d="M 0 0 
L -3.5 0 
" id="m02c51723b9" style="stroke:#000000;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m02c51723b9" y="194.989091"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_7"&gt;
&lt;!-- 4.8 --&gt;
&lt;defs&gt;
&lt;path d="M 10.6875 12.40625 
L 21 12.40625 
L 21 0 
L 10.6875 0 
z
" id="DejaVuSans-46"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 198.78831)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-56"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_2"&gt;
&lt;g id="line2d_8"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m02c51723b9" y="155.454545"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_8"&gt;
&lt;!-- 4.9 --&gt;
&lt;defs&gt;
&lt;path d="M 10.984375 1.515625 
L 10.984375 10.5 
Q 14.703125 8.734375 18.5 7.8125 
Q 22.3125 6.890625 25.984375 6.890625 
Q 35.75 6.890625 40.890625 13.453125 
Q 46.046875 20.015625 46.78125 33.40625 
Q 43.953125 29.203125 39.59375 26.953125 
Q 35.25 24.703125 29.984375 24.703125 
Q 19.046875 24.703125 12.671875 31.3125 
Q 6.296875 37.9375 6.296875 49.421875 
Q 6.296875 60.640625 12.9375 67.421875 
Q 19.578125 74.21875 30.609375 74.21875 
Q 43.265625 74.21875 49.921875 64.515625 
Q 56.59375 54.828125 56.59375 36.375 
Q 56.59375 19.140625 48.40625 8.859375 
Q 40.234375 -1.421875 26.421875 -1.421875 
Q 22.703125 -1.421875 18.890625 -0.6875 
Q 15.09375 0.046875 10.984375 1.515625 
z
M 30.609375 32.421875 
Q 37.25 32.421875 41.125 36.953125 
Q 45.015625 41.5 45.015625 49.421875 
Q 45.015625 57.28125 41.125 61.84375 
Q 37.25 66.40625 30.609375 66.40625 
Q 23.96875 66.40625 20.09375 61.84375 
Q 16.21875 57.28125 16.21875 49.421875 
Q 16.21875 41.5 20.09375 36.953125 
Q 23.96875 32.421875 30.609375 32.421875 
z
" id="DejaVuSans-57"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 159.253764)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-57"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_3"&gt;
&lt;g id="line2d_9"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m02c51723b9" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_9"&gt;
&lt;!-- 5.0 --&gt;
&lt;defs&gt;
&lt;path d="M 10.796875 72.90625 
L 49.515625 72.90625 
L 49.515625 64.59375 
L 19.828125 64.59375 
L 19.828125 46.734375 
Q 21.96875 47.46875 24.109375 47.828125 
Q 26.265625 48.1875 28.421875 48.1875 
Q 40.625 48.1875 47.75 41.5 
Q 54.890625 34.8125 54.890625 23.390625 
Q 54.890625 11.625 47.5625 5.09375 
Q 40.234375 -1.421875 26.90625 -1.421875 
Q 22.3125 -1.421875 17.546875 -0.640625 
Q 12.796875 0.140625 7.71875 1.703125 
L 7.71875 11.625 
Q 12.109375 9.234375 16.796875 8.0625 
Q 21.484375 6.890625 26.703125 6.890625 
Q 35.15625 6.890625 40.078125 11.328125 
Q 45.015625 15.765625 45.015625 23.390625 
Q 45.015625 31 40.078125 35.4375 
Q 35.15625 39.890625 26.703125 39.890625 
Q 22.75 39.890625 18.8125 39.015625 
Q 14.890625 38.140625 10.796875 36.28125 
z
" id="DejaVuSans-53"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 119.719219)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_4"&gt;
&lt;g id="line2d_10"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m02c51723b9" y="76.385455"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_10"&gt;
&lt;!-- 5.1 --&gt;
&lt;g transform="translate(7.2 80.184673)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-49"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_5"&gt;
&lt;g id="line2d_11"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m02c51723b9" y="36.850909"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_11"&gt;
&lt;!-- 5.2 --&gt;
&lt;g transform="translate(7.2 40.650128)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-50"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="line2d_12"&gt;
&lt;defs&gt;
&lt;path d="M -3 3 
L 3 -3 
M -3 -3 
L 3 3 
" id="m039c381d1b" style="stroke:#1f77b4;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g clip-path="url(#pcea03801a9)"&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="299.480632" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="89.250079" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="142.59216" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="133.178851" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="98.663387" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="86.11231" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="315.169479" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="261.827399" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="280.654015" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="214.760857" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="57.872385" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="130.041082" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="136.316621" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="246.138551" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="286.929554" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="268.102938" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="123.765543" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="330.858326" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="305.756171" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="324.582788" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="261.827399" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="211.623088" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="133.178851" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="224.174165" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="280.654015" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="45.321307" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="349.684943" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="108.076696" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="324.582788" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="214.760857" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="180.245393" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="104.938926" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="130.041082" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="349.684943" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="180.245393" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="86.11231" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="195.93424" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="82.97454" xlink:href="#m039c381d1b" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="line2d_13"&gt;
&lt;defs&gt;
&lt;path d="M -25 25 
L 25 -25 
M -25 -25 
L 25 25 
" id="m2eb9f2284c" style="stroke:#ff0000;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g clip-path="url(#pcea03801a9)"&gt;
&lt;use style="fill:#ff0000;stroke:#ff0000;" x="167.694315" xlink:href="#m2eb9f2284c" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="patch_3"&gt;
&lt;path d="M 30.103125 224.64 
L 30.103125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_4"&gt;
&lt;path d="M 364.903125 224.64 
L 364.903125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_5"&gt;
&lt;path d="M 30.103125 224.64 
L 364.903125 224.64 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_6"&gt;
&lt;path d="M 30.103125 7.2 
L 364.903125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_7"&gt;
&lt;path d="M 167.744315 80.463161 
Q 167.744315 92.190493 167.744315 103.917825 
L 173.694315 103.917825 
Q 170.694315 109.918913 167.694315 115.92 
Q 164.694315 109.918913 161.694315 103.917825 
L 167.644315 103.917825 
Q 167.644315 92.190493 167.644315 80.463161 
L 167.744315 80.463161 
z
" style="fill:#1f77b4;stroke:#000000;stroke-linecap:round;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="text_12"&gt;
&lt;!-- Median --&gt;
&lt;defs&gt;
&lt;path d="M 9.8125 72.90625 
L 24.515625 72.90625 
L 43.109375 23.296875 
L 61.8125 72.90625 
L 76.515625 72.90625 
L 76.515625 0 
L 66.890625 0 
L 66.890625 64.015625 
L 48.09375 14.015625 
L 38.1875 14.015625 
L 19.390625 64.015625 
L 19.390625 0 
L 9.8125 0 
z
" id="DejaVuSans-77"&gt;&lt;/path&gt;
&lt;path d="M 56.203125 29.59375 
L 56.203125 25.203125 
L 14.890625 25.203125 
Q 15.484375 15.921875 20.484375 11.0625 
Q 25.484375 6.203125 34.421875 6.203125 
Q 39.59375 6.203125 44.453125 7.46875 
Q 49.3125 8.734375 54.109375 11.28125 
L 54.109375 2.78125 
Q 49.265625 0.734375 44.1875 -0.34375 
Q 39.109375 -1.421875 33.890625 -1.421875 
Q 20.796875 -1.421875 13.15625 6.1875 
Q 5.515625 13.8125 5.515625 26.8125 
Q 5.515625 40.234375 12.765625 48.109375 
Q 20.015625 56 32.328125 56 
Q 43.359375 56 49.78125 48.890625 
Q 56.203125 41.796875 56.203125 29.59375 
z
M 47.21875 32.234375 
Q 47.125 39.59375 43.09375 43.984375 
Q 39.0625 48.390625 32.421875 48.390625 
Q 24.90625 48.390625 20.390625 44.140625 
Q 15.875 39.890625 15.1875 32.171875 
z
" id="DejaVuSans-101"&gt;&lt;/path&gt;
&lt;path d="M 45.40625 46.390625 
L 45.40625 75.984375 
L 54.390625 75.984375 
L 54.390625 0 
L 45.40625 0 
L 45.40625 8.203125 
Q 42.578125 3.328125 38.25 0.953125 
Q 33.9375 -1.421875 27.875 -1.421875 
Q 17.96875 -1.421875 11.734375 6.484375 
Q 5.515625 14.40625 5.515625 27.296875 
Q 5.515625 40.1875 11.734375 48.09375 
Q 17.96875 56 27.875 56 
Q 33.9375 56 38.25 53.625 
Q 42.578125 51.265625 45.40625 46.390625 
z
M 14.796875 27.296875 
Q 14.796875 17.390625 18.875 11.75 
Q 22.953125 6.109375 30.078125 6.109375 
Q 37.203125 6.109375 41.296875 11.75 
Q 45.40625 17.390625 45.40625 27.296875 
Q 45.40625 37.203125 41.296875 42.84375 
Q 37.203125 48.484375 30.078125 48.484375 
Q 22.953125 48.484375 18.875 42.84375 
Q 14.796875 37.203125 14.796875 27.296875 
z
" id="DejaVuSans-100"&gt;&lt;/path&gt;
&lt;path d="M 9.421875 54.6875 
L 18.40625 54.6875 
L 18.40625 0 
L 9.421875 0 
z
M 9.421875 75.984375 
L 18.40625 75.984375 
L 18.40625 64.59375 
L 9.421875 64.59375 
z
" id="DejaVuSans-105"&gt;&lt;/path&gt;
&lt;path d="M 34.28125 27.484375 
Q 23.390625 27.484375 19.1875 25 
Q 14.984375 22.515625 14.984375 16.5 
Q 14.984375 11.71875 18.140625 8.90625 
Q 21.296875 6.109375 26.703125 6.109375 
Q 34.1875 6.109375 38.703125 11.40625 
Q 43.21875 16.703125 43.21875 25.484375 
L 43.21875 27.484375 
z
M 52.203125 31.203125 
L 52.203125 0 
L 43.21875 0 
L 43.21875 8.296875 
Q 40.140625 3.328125 35.546875 0.953125 
Q 30.953125 -1.421875 24.3125 -1.421875 
Q 15.921875 -1.421875 10.953125 3.296875 
Q 6 8.015625 6 15.921875 
Q 6 25.140625 12.171875 29.828125 
Q 18.359375 34.515625 30.609375 34.515625 
L 43.21875 34.515625 
L 43.21875 35.40625 
Q 43.21875 41.609375 39.140625 45 
Q 35.0625 48.390625 27.6875 48.390625 
Q 23 48.390625 18.546875 47.265625 
Q 14.109375 46.140625 10.015625 43.890625 
L 10.015625 52.203125 
Q 14.9375 54.109375 19.578125 55.046875 
Q 24.21875 56 28.609375 56 
Q 40.484375 56 46.34375 49.84375 
Q 52.203125 43.703125 52.203125 31.203125 
z
" id="DejaVuSans-97"&gt;&lt;/path&gt;
&lt;path d="M 54.890625 33.015625 
L 54.890625 0 
L 45.90625 0 
L 45.90625 32.71875 
Q 45.90625 40.484375 42.875 44.328125 
Q 39.84375 48.1875 33.796875 48.1875 
Q 26.515625 48.1875 22.3125 43.546875 
Q 18.109375 38.921875 18.109375 30.90625 
L 18.109375 0 
L 9.078125 0 
L 9.078125 54.6875 
L 18.109375 54.6875 
L 18.109375 46.1875 
Q 21.34375 51.125 25.703125 53.5625 
Q 30.078125 56 35.796875 56 
Q 45.21875 56 50.046875 50.171875 
Q 54.890625 44.34375 54.890625 33.015625 
z
" id="DejaVuSans-110"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(167.694315 76.385455)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-77"&gt;&lt;/use&gt;
&lt;use x="86.279297" xlink:href="#DejaVuSans-101"&gt;&lt;/use&gt;
&lt;use x="147.802734" xlink:href="#DejaVuSans-100"&gt;&lt;/use&gt;
&lt;use x="211.279297" xlink:href="#DejaVuSans-105"&gt;&lt;/use&gt;
&lt;use x="239.0625" xlink:href="#DejaVuSans-97"&gt;&lt;/use&gt;
&lt;use x="300.341797" xlink:href="#DejaVuSans-110"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;defs&gt;
&lt;clippath id="pcea03801a9"&gt;
&lt;rect height="217.44" width="334.8" x="30.103125" y="7.2"&gt;&lt;/rect&gt;
&lt;/clippath&gt;
&lt;/defs&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Mode"&gt;Mode&lt;a class="anchor-link" href="#Mode"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The mode of a dataset is the number the appears most in the dataset. It is to be noted that this is the least used method of demonstrating central tendency.&lt;/p&gt;
&lt;h3 id="When-to-use"&gt;When to use&lt;a class="anchor-link" href="#When-to-use"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Mode is best used with nominal data, meaning if the data you are trying to summarise has no quantitative metrics behind it, then mode would be useful. Eg, if you are looking through textual data, finding the most used word is a significant way of summarising the data.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [4]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;statistics&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"Mode: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;statistics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plot_1d_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;statistics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'x'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;markersize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;annotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Mode'&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="n"&gt;statistics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="n"&gt;statistics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mf"&gt;5.1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;arrowprops&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'width'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Mode: 4
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt output_prompt"&gt;Out[4]:&lt;/div&gt;
&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;Text(4, 5.1, 'Mode')&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_svg output_subarea"&gt;
&lt;!--?xml version="1.0" encoding="utf-8" standalone="no"?--&gt;
&lt;!-- Created with matplotlib (https://matplotlib.org/) --&gt;
&lt;svg height="248.518125pt" version="1.1" viewbox="0 0 372.704232 248.518125" width="372.704232pt" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;
&lt;defs&gt;
&lt;style type="text/css"&gt;
*{stroke-linecap:butt;stroke-linejoin:round;}
  &lt;/style&gt;
&lt;/defs&gt;
&lt;g id="figure_1"&gt;
&lt;g id="patch_1"&gt;
&lt;path d="M 0 248.518125 
L 372.704232 248.518125 
L 372.704232 0 
L 0 0 
z
" style="fill:none;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="axes_1"&gt;
&lt;g id="patch_2"&gt;
&lt;path d="M 30.103125 224.64 
L 364.903125 224.64 
L 364.903125 7.2 
L 30.103125 7.2 
z
" style="fill:#ffffff;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="matplotlib.axis_1"&gt;
&lt;g id="xtick_1"&gt;
&lt;g id="line2d_1"&gt;
&lt;defs&gt;
&lt;path d="M 0 0 
L 0 3.5 
" id="mf1e45eacde" style="stroke:#000000;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="42.183537" xlink:href="#mf1e45eacde" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_1"&gt;
&lt;!-- 0 --&gt;
&lt;defs&gt;
&lt;path d="M 31.78125 66.40625 
Q 24.171875 66.40625 20.328125 58.90625 
Q 16.5 51.421875 16.5 36.375 
Q 16.5 21.390625 20.328125 13.890625 
Q 24.171875 6.390625 31.78125 6.390625 
Q 39.453125 6.390625 43.28125 13.890625 
Q 47.125 21.390625 47.125 36.375 
Q 47.125 51.421875 43.28125 58.90625 
Q 39.453125 66.40625 31.78125 66.40625 
z
M 31.78125 74.21875 
Q 44.046875 74.21875 50.515625 64.515625 
Q 56.984375 54.828125 56.984375 36.375 
Q 56.984375 17.96875 50.515625 8.265625 
Q 44.046875 -1.421875 31.78125 -1.421875 
Q 19.53125 -1.421875 13.0625 8.265625 
Q 6.59375 17.96875 6.59375 36.375 
Q 6.59375 54.828125 13.0625 64.515625 
Q 19.53125 74.21875 31.78125 74.21875 
z
" id="DejaVuSans-48"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(39.002287 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_2"&gt;
&lt;g id="line2d_2"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="104.938926" xlink:href="#mf1e45eacde" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_2"&gt;
&lt;!-- 20 --&gt;
&lt;defs&gt;
&lt;path d="M 19.1875 8.296875 
L 53.609375 8.296875 
L 53.609375 0 
L 7.328125 0 
L 7.328125 8.296875 
Q 12.9375 14.109375 22.625 23.890625 
Q 32.328125 33.6875 34.8125 36.53125 
Q 39.546875 41.84375 41.421875 45.53125 
Q 43.3125 49.21875 43.3125 52.78125 
Q 43.3125 58.59375 39.234375 62.25 
Q 35.15625 65.921875 28.609375 65.921875 
Q 23.96875 65.921875 18.8125 64.3125 
Q 13.671875 62.703125 7.8125 59.421875 
L 7.8125 69.390625 
Q 13.765625 71.78125 18.9375 73 
Q 24.125 74.21875 28.421875 74.21875 
Q 39.75 74.21875 46.484375 68.546875 
Q 53.21875 62.890625 53.21875 53.421875 
Q 53.21875 48.921875 51.53125 44.890625 
Q 49.859375 40.875 45.40625 35.40625 
Q 44.1875 33.984375 37.640625 27.21875 
Q 31.109375 20.453125 19.1875 8.296875 
z
" id="DejaVuSans-50"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(98.576426 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-50"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_3"&gt;
&lt;g id="line2d_3"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="167.694315" xlink:href="#mf1e45eacde" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_3"&gt;
&lt;!-- 40 --&gt;
&lt;defs&gt;
&lt;path d="M 37.796875 64.3125 
L 12.890625 25.390625 
L 37.796875 25.390625 
z
M 35.203125 72.90625 
L 47.609375 72.90625 
L 47.609375 25.390625 
L 58.015625 25.390625 
L 58.015625 17.1875 
L 47.609375 17.1875 
L 47.609375 0 
L 37.796875 0 
L 37.796875 17.1875 
L 4.890625 17.1875 
L 4.890625 26.703125 
z
" id="DejaVuSans-52"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(161.331815 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_4"&gt;
&lt;g id="line2d_4"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="230.449704" xlink:href="#mf1e45eacde" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_4"&gt;
&lt;!-- 60 --&gt;
&lt;defs&gt;
&lt;path d="M 33.015625 40.375 
Q 26.375 40.375 22.484375 35.828125 
Q 18.609375 31.296875 18.609375 23.390625 
Q 18.609375 15.53125 22.484375 10.953125 
Q 26.375 6.390625 33.015625 6.390625 
Q 39.65625 6.390625 43.53125 10.953125 
Q 47.40625 15.53125 47.40625 23.390625 
Q 47.40625 31.296875 43.53125 35.828125 
Q 39.65625 40.375 33.015625 40.375 
z
M 52.59375 71.296875 
L 52.59375 62.3125 
Q 48.875 64.0625 45.09375 64.984375 
Q 41.3125 65.921875 37.59375 65.921875 
Q 27.828125 65.921875 22.671875 59.328125 
Q 17.53125 52.734375 16.796875 39.40625 
Q 19.671875 43.65625 24.015625 45.921875 
Q 28.375 48.1875 33.59375 48.1875 
Q 44.578125 48.1875 50.953125 41.515625 
Q 57.328125 34.859375 57.328125 23.390625 
Q 57.328125 12.15625 50.6875 5.359375 
Q 44.046875 -1.421875 33.015625 -1.421875 
Q 20.359375 -1.421875 13.671875 8.265625 
Q 6.984375 17.96875 6.984375 36.375 
Q 6.984375 53.65625 15.1875 63.9375 
Q 23.390625 74.21875 37.203125 74.21875 
Q 40.921875 74.21875 44.703125 73.484375 
Q 48.484375 72.75 52.59375 71.296875 
z
" id="DejaVuSans-54"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(224.087204 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-54"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_5"&gt;
&lt;g id="line2d_5"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="293.205093" xlink:href="#mf1e45eacde" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_5"&gt;
&lt;!-- 80 --&gt;
&lt;defs&gt;
&lt;path d="M 31.78125 34.625 
Q 24.75 34.625 20.71875 30.859375 
Q 16.703125 27.09375 16.703125 20.515625 
Q 16.703125 13.921875 20.71875 10.15625 
Q 24.75 6.390625 31.78125 6.390625 
Q 38.8125 6.390625 42.859375 10.171875 
Q 46.921875 13.96875 46.921875 20.515625 
Q 46.921875 27.09375 42.890625 30.859375 
Q 38.875 34.625 31.78125 34.625 
z
M 21.921875 38.8125 
Q 15.578125 40.375 12.03125 44.71875 
Q 8.5 49.078125 8.5 55.328125 
Q 8.5 64.0625 14.71875 69.140625 
Q 20.953125 74.21875 31.78125 74.21875 
Q 42.671875 74.21875 48.875 69.140625 
Q 55.078125 64.0625 55.078125 55.328125 
Q 55.078125 49.078125 51.53125 44.71875 
Q 48 40.375 41.703125 38.8125 
Q 48.828125 37.15625 52.796875 32.3125 
Q 56.78125 27.484375 56.78125 20.515625 
Q 56.78125 9.90625 50.3125 4.234375 
Q 43.84375 -1.421875 31.78125 -1.421875 
Q 19.734375 -1.421875 13.25 4.234375 
Q 6.78125 9.90625 6.78125 20.515625 
Q 6.78125 27.484375 10.78125 32.3125 
Q 14.796875 37.15625 21.921875 38.8125 
z
M 18.3125 54.390625 
Q 18.3125 48.734375 21.84375 45.5625 
Q 25.390625 42.390625 31.78125 42.390625 
Q 38.140625 42.390625 41.71875 45.5625 
Q 45.3125 48.734375 45.3125 54.390625 
Q 45.3125 60.0625 41.71875 63.234375 
Q 38.140625 66.40625 31.78125 66.40625 
Q 25.390625 66.40625 21.84375 63.234375 
Q 18.3125 60.0625 18.3125 54.390625 
z
" id="DejaVuSans-56"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(286.842593 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-56"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_6"&gt;
&lt;g id="line2d_6"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="355.960482" xlink:href="#mf1e45eacde" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_6"&gt;
&lt;!-- 100 --&gt;
&lt;defs&gt;
&lt;path d="M 12.40625 8.296875 
L 28.515625 8.296875 
L 28.515625 63.921875 
L 10.984375 60.40625 
L 10.984375 69.390625 
L 28.421875 72.90625 
L 38.28125 72.90625 
L 38.28125 8.296875 
L 54.390625 8.296875 
L 54.390625 0 
L 12.40625 0 
z
" id="DejaVuSans-49"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(346.416732 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-49"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;use x="127.246094" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="matplotlib.axis_2"&gt;
&lt;g id="ytick_1"&gt;
&lt;g id="line2d_7"&gt;
&lt;defs&gt;
&lt;path d="M 0 0 
L -3.5 0 
" id="m7c68cf08fa" style="stroke:#000000;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m7c68cf08fa" y="194.989091"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_7"&gt;
&lt;!-- 4.8 --&gt;
&lt;defs&gt;
&lt;path d="M 10.6875 12.40625 
L 21 12.40625 
L 21 0 
L 10.6875 0 
z
" id="DejaVuSans-46"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 198.78831)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-56"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_2"&gt;
&lt;g id="line2d_8"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m7c68cf08fa" y="155.454545"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_8"&gt;
&lt;!-- 4.9 --&gt;
&lt;defs&gt;
&lt;path d="M 10.984375 1.515625 
L 10.984375 10.5 
Q 14.703125 8.734375 18.5 7.8125 
Q 22.3125 6.890625 25.984375 6.890625 
Q 35.75 6.890625 40.890625 13.453125 
Q 46.046875 20.015625 46.78125 33.40625 
Q 43.953125 29.203125 39.59375 26.953125 
Q 35.25 24.703125 29.984375 24.703125 
Q 19.046875 24.703125 12.671875 31.3125 
Q 6.296875 37.9375 6.296875 49.421875 
Q 6.296875 60.640625 12.9375 67.421875 
Q 19.578125 74.21875 30.609375 74.21875 
Q 43.265625 74.21875 49.921875 64.515625 
Q 56.59375 54.828125 56.59375 36.375 
Q 56.59375 19.140625 48.40625 8.859375 
Q 40.234375 -1.421875 26.421875 -1.421875 
Q 22.703125 -1.421875 18.890625 -0.6875 
Q 15.09375 0.046875 10.984375 1.515625 
z
M 30.609375 32.421875 
Q 37.25 32.421875 41.125 36.953125 
Q 45.015625 41.5 45.015625 49.421875 
Q 45.015625 57.28125 41.125 61.84375 
Q 37.25 66.40625 30.609375 66.40625 
Q 23.96875 66.40625 20.09375 61.84375 
Q 16.21875 57.28125 16.21875 49.421875 
Q 16.21875 41.5 20.09375 36.953125 
Q 23.96875 32.421875 30.609375 32.421875 
z
" id="DejaVuSans-57"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 159.253764)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-57"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_3"&gt;
&lt;g id="line2d_9"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m7c68cf08fa" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_9"&gt;
&lt;!-- 5.0 --&gt;
&lt;defs&gt;
&lt;path d="M 10.796875 72.90625 
L 49.515625 72.90625 
L 49.515625 64.59375 
L 19.828125 64.59375 
L 19.828125 46.734375 
Q 21.96875 47.46875 24.109375 47.828125 
Q 26.265625 48.1875 28.421875 48.1875 
Q 40.625 48.1875 47.75 41.5 
Q 54.890625 34.8125 54.890625 23.390625 
Q 54.890625 11.625 47.5625 5.09375 
Q 40.234375 -1.421875 26.90625 -1.421875 
Q 22.3125 -1.421875 17.546875 -0.640625 
Q 12.796875 0.140625 7.71875 1.703125 
L 7.71875 11.625 
Q 12.109375 9.234375 16.796875 8.0625 
Q 21.484375 6.890625 26.703125 6.890625 
Q 35.15625 6.890625 40.078125 11.328125 
Q 45.015625 15.765625 45.015625 23.390625 
Q 45.015625 31 40.078125 35.4375 
Q 35.15625 39.890625 26.703125 39.890625 
Q 22.75 39.890625 18.8125 39.015625 
Q 14.890625 38.140625 10.796875 36.28125 
z
" id="DejaVuSans-53"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 119.719219)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_4"&gt;
&lt;g id="line2d_10"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m7c68cf08fa" y="76.385455"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_10"&gt;
&lt;!-- 5.1 --&gt;
&lt;g transform="translate(7.2 80.184673)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-49"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_5"&gt;
&lt;g id="line2d_11"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m7c68cf08fa" y="36.850909"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_11"&gt;
&lt;!-- 5.2 --&gt;
&lt;g transform="translate(7.2 40.650128)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-50"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="line2d_12"&gt;
&lt;defs&gt;
&lt;path d="M -3 3 
L 3 -3 
M -3 -3 
L 3 3 
" id="m12395e0a32" style="stroke:#1f77b4;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g clip-path="url(#p373fd62d38)"&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="299.480632" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="89.250079" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="142.59216" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="133.178851" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="98.663387" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="86.11231" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="315.169479" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="261.827399" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="280.654015" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="214.760857" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="57.872385" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="130.041082" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="136.316621" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="246.138551" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="286.929554" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="268.102938" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="123.765543" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="330.858326" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="305.756171" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="324.582788" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="261.827399" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="211.623088" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="133.178851" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="224.174165" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="280.654015" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="45.321307" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="349.684943" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="108.076696" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="324.582788" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="214.760857" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="180.245393" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="104.938926" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="130.041082" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="349.684943" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="180.245393" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="86.11231" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="195.93424" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="82.97454" xlink:href="#m12395e0a32" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="line2d_13"&gt;
&lt;defs&gt;
&lt;path d="M -25 25 
L 25 -25 
M -25 -25 
L 25 25 
" id="meaf79e6dd4" style="stroke:#ff0000;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g clip-path="url(#p373fd62d38)"&gt;
&lt;use style="fill:#ff0000;stroke:#ff0000;" x="54.734615" xlink:href="#meaf79e6dd4" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="patch_3"&gt;
&lt;path d="M 30.103125 224.64 
L 30.103125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_4"&gt;
&lt;path d="M 364.903125 224.64 
L 364.903125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_5"&gt;
&lt;path d="M 30.103125 224.64 
L 364.903125 224.64 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_6"&gt;
&lt;path d="M 30.103125 7.2 
L 364.903125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_7"&gt;
&lt;path d="M 54.784615 80.463161 
Q 54.784615 92.190493 54.784615 103.917825 
L 60.734615 103.917825 
Q 57.734615 109.918913 54.734615 115.92 
Q 51.734615 109.918913 48.734615 103.917825 
L 54.684615 103.917825 
Q 54.684615 92.190493 54.684615 80.463161 
L 54.784615 80.463161 
z
" style="fill:#1f77b4;stroke:#000000;stroke-linecap:round;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="text_12"&gt;
&lt;!-- Mode --&gt;
&lt;defs&gt;
&lt;path d="M 9.8125 72.90625 
L 24.515625 72.90625 
L 43.109375 23.296875 
L 61.8125 72.90625 
L 76.515625 72.90625 
L 76.515625 0 
L 66.890625 0 
L 66.890625 64.015625 
L 48.09375 14.015625 
L 38.1875 14.015625 
L 19.390625 64.015625 
L 19.390625 0 
L 9.8125 0 
z
" id="DejaVuSans-77"&gt;&lt;/path&gt;
&lt;path d="M 30.609375 48.390625 
Q 23.390625 48.390625 19.1875 42.75 
Q 14.984375 37.109375 14.984375 27.296875 
Q 14.984375 17.484375 19.15625 11.84375 
Q 23.34375 6.203125 30.609375 6.203125 
Q 37.796875 6.203125 41.984375 11.859375 
Q 46.1875 17.53125 46.1875 27.296875 
Q 46.1875 37.015625 41.984375 42.703125 
Q 37.796875 48.390625 30.609375 48.390625 
z
M 30.609375 56 
Q 42.328125 56 49.015625 48.375 
Q 55.71875 40.765625 55.71875 27.296875 
Q 55.71875 13.875 49.015625 6.21875 
Q 42.328125 -1.421875 30.609375 -1.421875 
Q 18.84375 -1.421875 12.171875 6.21875 
Q 5.515625 13.875 5.515625 27.296875 
Q 5.515625 40.765625 12.171875 48.375 
Q 18.84375 56 30.609375 56 
z
" id="DejaVuSans-111"&gt;&lt;/path&gt;
&lt;path d="M 45.40625 46.390625 
L 45.40625 75.984375 
L 54.390625 75.984375 
L 54.390625 0 
L 45.40625 0 
L 45.40625 8.203125 
Q 42.578125 3.328125 38.25 0.953125 
Q 33.9375 -1.421875 27.875 -1.421875 
Q 17.96875 -1.421875 11.734375 6.484375 
Q 5.515625 14.40625 5.515625 27.296875 
Q 5.515625 40.1875 11.734375 48.09375 
Q 17.96875 56 27.875 56 
Q 33.9375 56 38.25 53.625 
Q 42.578125 51.265625 45.40625 46.390625 
z
M 14.796875 27.296875 
Q 14.796875 17.390625 18.875 11.75 
Q 22.953125 6.109375 30.078125 6.109375 
Q 37.203125 6.109375 41.296875 11.75 
Q 45.40625 17.390625 45.40625 27.296875 
Q 45.40625 37.203125 41.296875 42.84375 
Q 37.203125 48.484375 30.078125 48.484375 
Q 22.953125 48.484375 18.875 42.84375 
Q 14.796875 37.203125 14.796875 27.296875 
z
" id="DejaVuSans-100"&gt;&lt;/path&gt;
&lt;path d="M 56.203125 29.59375 
L 56.203125 25.203125 
L 14.890625 25.203125 
Q 15.484375 15.921875 20.484375 11.0625 
Q 25.484375 6.203125 34.421875 6.203125 
Q 39.59375 6.203125 44.453125 7.46875 
Q 49.3125 8.734375 54.109375 11.28125 
L 54.109375 2.78125 
Q 49.265625 0.734375 44.1875 -0.34375 
Q 39.109375 -1.421875 33.890625 -1.421875 
Q 20.796875 -1.421875 13.15625 6.1875 
Q 5.515625 13.8125 5.515625 26.8125 
Q 5.515625 40.234375 12.765625 48.109375 
Q 20.015625 56 32.328125 56 
Q 43.359375 56 49.78125 48.890625 
Q 56.203125 41.796875 56.203125 29.59375 
z
M 47.21875 32.234375 
Q 47.125 39.59375 43.09375 43.984375 
Q 39.0625 48.390625 32.421875 48.390625 
Q 24.90625 48.390625 20.390625 44.140625 
Q 15.875 39.890625 15.1875 32.171875 
z
" id="DejaVuSans-101"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(54.734615 76.385455)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-77"&gt;&lt;/use&gt;
&lt;use x="86.279297" xlink:href="#DejaVuSans-111"&gt;&lt;/use&gt;
&lt;use x="147.460938" xlink:href="#DejaVuSans-100"&gt;&lt;/use&gt;
&lt;use x="210.9375" xlink:href="#DejaVuSans-101"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;defs&gt;
&lt;clippath id="p373fd62d38"&gt;
&lt;rect height="217.44" width="334.8" x="30.103125" y="7.2"&gt;&lt;/rect&gt;
&lt;/clippath&gt;
&lt;/defs&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Arithmetic-Mean"&gt;Arithmetic Mean&lt;a class="anchor-link" href="#Arithmetic-Mean"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;This is the most used way of representing central tendency. It is done by summing all the points in the dataset, and then dividing by the number of points (to scale back into the original domain). This is the best way of representing central tendency if the data does not containing outliers that will skew the outcome (which can be overcome by normalisation).&lt;/p&gt;
&lt;h3 id="When-to-use"&gt;When to use&lt;a class="anchor-link" href="#When-to-use"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If the dataset is normally distributed, this is the ideal measure.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [5]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;arithmetic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;typing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"Arithmetic Mean: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;arithmetic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plot_1d_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arithmetic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'x'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;markersize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;annotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Arithmetic Mean'&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="n"&gt;arithmetic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="n"&gt;arithmetic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mf"&gt;5.1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;arrowprops&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'width'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Arithmetic Mean: 47.02
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt output_prompt"&gt;Out[5]:&lt;/div&gt;
&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;Text(47.02, 5.1, 'Arithmetic Mean')&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_svg output_subarea"&gt;
&lt;!--?xml version="1.0" encoding="utf-8" standalone="no"?--&gt;
&lt;!-- Created with matplotlib (https://matplotlib.org/) --&gt;
&lt;svg height="248.518125pt" version="1.1" viewbox="0 0 372.704232 248.518125" width="372.704232pt" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;
&lt;defs&gt;
&lt;style type="text/css"&gt;
*{stroke-linecap:butt;stroke-linejoin:round;}
  &lt;/style&gt;
&lt;/defs&gt;
&lt;g id="figure_1"&gt;
&lt;g id="patch_1"&gt;
&lt;path d="M 0 248.518125 
L 372.704232 248.518125 
L 372.704232 0 
L 0 0 
z
" style="fill:none;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="axes_1"&gt;
&lt;g id="patch_2"&gt;
&lt;path d="M 30.103125 224.64 
L 364.903125 224.64 
L 364.903125 7.2 
L 30.103125 7.2 
z
" style="fill:#ffffff;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="matplotlib.axis_1"&gt;
&lt;g id="xtick_1"&gt;
&lt;g id="line2d_1"&gt;
&lt;defs&gt;
&lt;path d="M 0 0 
L 0 3.5 
" id="m9de2f25154" style="stroke:#000000;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="42.183537" xlink:href="#m9de2f25154" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_1"&gt;
&lt;!-- 0 --&gt;
&lt;defs&gt;
&lt;path d="M 31.78125 66.40625 
Q 24.171875 66.40625 20.328125 58.90625 
Q 16.5 51.421875 16.5 36.375 
Q 16.5 21.390625 20.328125 13.890625 
Q 24.171875 6.390625 31.78125 6.390625 
Q 39.453125 6.390625 43.28125 13.890625 
Q 47.125 21.390625 47.125 36.375 
Q 47.125 51.421875 43.28125 58.90625 
Q 39.453125 66.40625 31.78125 66.40625 
z
M 31.78125 74.21875 
Q 44.046875 74.21875 50.515625 64.515625 
Q 56.984375 54.828125 56.984375 36.375 
Q 56.984375 17.96875 50.515625 8.265625 
Q 44.046875 -1.421875 31.78125 -1.421875 
Q 19.53125 -1.421875 13.0625 8.265625 
Q 6.59375 17.96875 6.59375 36.375 
Q 6.59375 54.828125 13.0625 64.515625 
Q 19.53125 74.21875 31.78125 74.21875 
z
" id="DejaVuSans-48"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(39.002287 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_2"&gt;
&lt;g id="line2d_2"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="104.938926" xlink:href="#m9de2f25154" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_2"&gt;
&lt;!-- 20 --&gt;
&lt;defs&gt;
&lt;path d="M 19.1875 8.296875 
L 53.609375 8.296875 
L 53.609375 0 
L 7.328125 0 
L 7.328125 8.296875 
Q 12.9375 14.109375 22.625 23.890625 
Q 32.328125 33.6875 34.8125 36.53125 
Q 39.546875 41.84375 41.421875 45.53125 
Q 43.3125 49.21875 43.3125 52.78125 
Q 43.3125 58.59375 39.234375 62.25 
Q 35.15625 65.921875 28.609375 65.921875 
Q 23.96875 65.921875 18.8125 64.3125 
Q 13.671875 62.703125 7.8125 59.421875 
L 7.8125 69.390625 
Q 13.765625 71.78125 18.9375 73 
Q 24.125 74.21875 28.421875 74.21875 
Q 39.75 74.21875 46.484375 68.546875 
Q 53.21875 62.890625 53.21875 53.421875 
Q 53.21875 48.921875 51.53125 44.890625 
Q 49.859375 40.875 45.40625 35.40625 
Q 44.1875 33.984375 37.640625 27.21875 
Q 31.109375 20.453125 19.1875 8.296875 
z
" id="DejaVuSans-50"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(98.576426 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-50"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_3"&gt;
&lt;g id="line2d_3"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="167.694315" xlink:href="#m9de2f25154" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_3"&gt;
&lt;!-- 40 --&gt;
&lt;defs&gt;
&lt;path d="M 37.796875 64.3125 
L 12.890625 25.390625 
L 37.796875 25.390625 
z
M 35.203125 72.90625 
L 47.609375 72.90625 
L 47.609375 25.390625 
L 58.015625 25.390625 
L 58.015625 17.1875 
L 47.609375 17.1875 
L 47.609375 0 
L 37.796875 0 
L 37.796875 17.1875 
L 4.890625 17.1875 
L 4.890625 26.703125 
z
" id="DejaVuSans-52"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(161.331815 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_4"&gt;
&lt;g id="line2d_4"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="230.449704" xlink:href="#m9de2f25154" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_4"&gt;
&lt;!-- 60 --&gt;
&lt;defs&gt;
&lt;path d="M 33.015625 40.375 
Q 26.375 40.375 22.484375 35.828125 
Q 18.609375 31.296875 18.609375 23.390625 
Q 18.609375 15.53125 22.484375 10.953125 
Q 26.375 6.390625 33.015625 6.390625 
Q 39.65625 6.390625 43.53125 10.953125 
Q 47.40625 15.53125 47.40625 23.390625 
Q 47.40625 31.296875 43.53125 35.828125 
Q 39.65625 40.375 33.015625 40.375 
z
M 52.59375 71.296875 
L 52.59375 62.3125 
Q 48.875 64.0625 45.09375 64.984375 
Q 41.3125 65.921875 37.59375 65.921875 
Q 27.828125 65.921875 22.671875 59.328125 
Q 17.53125 52.734375 16.796875 39.40625 
Q 19.671875 43.65625 24.015625 45.921875 
Q 28.375 48.1875 33.59375 48.1875 
Q 44.578125 48.1875 50.953125 41.515625 
Q 57.328125 34.859375 57.328125 23.390625 
Q 57.328125 12.15625 50.6875 5.359375 
Q 44.046875 -1.421875 33.015625 -1.421875 
Q 20.359375 -1.421875 13.671875 8.265625 
Q 6.984375 17.96875 6.984375 36.375 
Q 6.984375 53.65625 15.1875 63.9375 
Q 23.390625 74.21875 37.203125 74.21875 
Q 40.921875 74.21875 44.703125 73.484375 
Q 48.484375 72.75 52.59375 71.296875 
z
" id="DejaVuSans-54"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(224.087204 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-54"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_5"&gt;
&lt;g id="line2d_5"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="293.205093" xlink:href="#m9de2f25154" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_5"&gt;
&lt;!-- 80 --&gt;
&lt;defs&gt;
&lt;path d="M 31.78125 34.625 
Q 24.75 34.625 20.71875 30.859375 
Q 16.703125 27.09375 16.703125 20.515625 
Q 16.703125 13.921875 20.71875 10.15625 
Q 24.75 6.390625 31.78125 6.390625 
Q 38.8125 6.390625 42.859375 10.171875 
Q 46.921875 13.96875 46.921875 20.515625 
Q 46.921875 27.09375 42.890625 30.859375 
Q 38.875 34.625 31.78125 34.625 
z
M 21.921875 38.8125 
Q 15.578125 40.375 12.03125 44.71875 
Q 8.5 49.078125 8.5 55.328125 
Q 8.5 64.0625 14.71875 69.140625 
Q 20.953125 74.21875 31.78125 74.21875 
Q 42.671875 74.21875 48.875 69.140625 
Q 55.078125 64.0625 55.078125 55.328125 
Q 55.078125 49.078125 51.53125 44.71875 
Q 48 40.375 41.703125 38.8125 
Q 48.828125 37.15625 52.796875 32.3125 
Q 56.78125 27.484375 56.78125 20.515625 
Q 56.78125 9.90625 50.3125 4.234375 
Q 43.84375 -1.421875 31.78125 -1.421875 
Q 19.734375 -1.421875 13.25 4.234375 
Q 6.78125 9.90625 6.78125 20.515625 
Q 6.78125 27.484375 10.78125 32.3125 
Q 14.796875 37.15625 21.921875 38.8125 
z
M 18.3125 54.390625 
Q 18.3125 48.734375 21.84375 45.5625 
Q 25.390625 42.390625 31.78125 42.390625 
Q 38.140625 42.390625 41.71875 45.5625 
Q 45.3125 48.734375 45.3125 54.390625 
Q 45.3125 60.0625 41.71875 63.234375 
Q 38.140625 66.40625 31.78125 66.40625 
Q 25.390625 66.40625 21.84375 63.234375 
Q 18.3125 60.0625 18.3125 54.390625 
z
" id="DejaVuSans-56"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(286.842593 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-56"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_6"&gt;
&lt;g id="line2d_6"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="355.960482" xlink:href="#m9de2f25154" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_6"&gt;
&lt;!-- 100 --&gt;
&lt;defs&gt;
&lt;path d="M 12.40625 8.296875 
L 28.515625 8.296875 
L 28.515625 63.921875 
L 10.984375 60.40625 
L 10.984375 69.390625 
L 28.421875 72.90625 
L 38.28125 72.90625 
L 38.28125 8.296875 
L 54.390625 8.296875 
L 54.390625 0 
L 12.40625 0 
z
" id="DejaVuSans-49"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(346.416732 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-49"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;use x="127.246094" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="matplotlib.axis_2"&gt;
&lt;g id="ytick_1"&gt;
&lt;g id="line2d_7"&gt;
&lt;defs&gt;
&lt;path d="M 0 0 
L -3.5 0 
" id="m348715dd14" style="stroke:#000000;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m348715dd14" y="194.989091"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_7"&gt;
&lt;!-- 4.8 --&gt;
&lt;defs&gt;
&lt;path d="M 10.6875 12.40625 
L 21 12.40625 
L 21 0 
L 10.6875 0 
z
" id="DejaVuSans-46"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 198.78831)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-56"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_2"&gt;
&lt;g id="line2d_8"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m348715dd14" y="155.454545"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_8"&gt;
&lt;!-- 4.9 --&gt;
&lt;defs&gt;
&lt;path d="M 10.984375 1.515625 
L 10.984375 10.5 
Q 14.703125 8.734375 18.5 7.8125 
Q 22.3125 6.890625 25.984375 6.890625 
Q 35.75 6.890625 40.890625 13.453125 
Q 46.046875 20.015625 46.78125 33.40625 
Q 43.953125 29.203125 39.59375 26.953125 
Q 35.25 24.703125 29.984375 24.703125 
Q 19.046875 24.703125 12.671875 31.3125 
Q 6.296875 37.9375 6.296875 49.421875 
Q 6.296875 60.640625 12.9375 67.421875 
Q 19.578125 74.21875 30.609375 74.21875 
Q 43.265625 74.21875 49.921875 64.515625 
Q 56.59375 54.828125 56.59375 36.375 
Q 56.59375 19.140625 48.40625 8.859375 
Q 40.234375 -1.421875 26.421875 -1.421875 
Q 22.703125 -1.421875 18.890625 -0.6875 
Q 15.09375 0.046875 10.984375 1.515625 
z
M 30.609375 32.421875 
Q 37.25 32.421875 41.125 36.953125 
Q 45.015625 41.5 45.015625 49.421875 
Q 45.015625 57.28125 41.125 61.84375 
Q 37.25 66.40625 30.609375 66.40625 
Q 23.96875 66.40625 20.09375 61.84375 
Q 16.21875 57.28125 16.21875 49.421875 
Q 16.21875 41.5 20.09375 36.953125 
Q 23.96875 32.421875 30.609375 32.421875 
z
" id="DejaVuSans-57"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 159.253764)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-57"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_3"&gt;
&lt;g id="line2d_9"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m348715dd14" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_9"&gt;
&lt;!-- 5.0 --&gt;
&lt;defs&gt;
&lt;path d="M 10.796875 72.90625 
L 49.515625 72.90625 
L 49.515625 64.59375 
L 19.828125 64.59375 
L 19.828125 46.734375 
Q 21.96875 47.46875 24.109375 47.828125 
Q 26.265625 48.1875 28.421875 48.1875 
Q 40.625 48.1875 47.75 41.5 
Q 54.890625 34.8125 54.890625 23.390625 
Q 54.890625 11.625 47.5625 5.09375 
Q 40.234375 -1.421875 26.90625 -1.421875 
Q 22.3125 -1.421875 17.546875 -0.640625 
Q 12.796875 0.140625 7.71875 1.703125 
L 7.71875 11.625 
Q 12.109375 9.234375 16.796875 8.0625 
Q 21.484375 6.890625 26.703125 6.890625 
Q 35.15625 6.890625 40.078125 11.328125 
Q 45.015625 15.765625 45.015625 23.390625 
Q 45.015625 31 40.078125 35.4375 
Q 35.15625 39.890625 26.703125 39.890625 
Q 22.75 39.890625 18.8125 39.015625 
Q 14.890625 38.140625 10.796875 36.28125 
z
" id="DejaVuSans-53"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 119.719219)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_4"&gt;
&lt;g id="line2d_10"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m348715dd14" y="76.385455"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_10"&gt;
&lt;!-- 5.1 --&gt;
&lt;g transform="translate(7.2 80.184673)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-49"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_5"&gt;
&lt;g id="line2d_11"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m348715dd14" y="36.850909"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_11"&gt;
&lt;!-- 5.2 --&gt;
&lt;g transform="translate(7.2 40.650128)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-50"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="line2d_12"&gt;
&lt;defs&gt;
&lt;path d="M -3 3 
L 3 -3 
M -3 -3 
L 3 3 
" id="m902c5ba487" style="stroke:#1f77b4;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g clip-path="url(#p135daa0e99)"&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="299.480632" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="89.250079" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="142.59216" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="133.178851" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="98.663387" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="86.11231" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="315.169479" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="261.827399" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="280.654015" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="214.760857" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="57.872385" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="130.041082" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="136.316621" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="246.138551" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="286.929554" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="268.102938" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="123.765543" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="330.858326" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="305.756171" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="324.582788" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="261.827399" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="211.623088" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="133.178851" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="224.174165" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="280.654015" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="45.321307" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="349.684943" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="108.076696" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="324.582788" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="214.760857" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="180.245393" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="104.938926" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="130.041082" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="349.684943" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="180.245393" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="86.11231" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="195.93424" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="82.97454" xlink:href="#m902c5ba487" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="line2d_13"&gt;
&lt;defs&gt;
&lt;path d="M -25 25 
L 25 -25 
M -25 -25 
L 25 25 
" id="m66be32d23e" style="stroke:#ff0000;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g clip-path="url(#p135daa0e99)"&gt;
&lt;use style="fill:#ff0000;stroke:#ff0000;" x="189.721457" xlink:href="#m66be32d23e" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="patch_3"&gt;
&lt;path d="M 30.103125 224.64 
L 30.103125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_4"&gt;
&lt;path d="M 364.903125 224.64 
L 364.903125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_5"&gt;
&lt;path d="M 30.103125 224.64 
L 364.903125 224.64 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_6"&gt;
&lt;path d="M 30.103125 7.2 
L 364.903125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_7"&gt;
&lt;path d="M 189.771457 80.463161 
Q 189.771457 92.190493 189.771457 103.917825 
L 195.721457 103.917825 
Q 192.721457 109.918913 189.721457 115.92 
Q 186.721457 109.918913 183.721457 103.917825 
L 189.671457 103.917825 
Q 189.671457 92.190493 189.671457 80.463161 
L 189.771457 80.463161 
z
" style="fill:#1f77b4;stroke:#000000;stroke-linecap:round;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="text_12"&gt;
&lt;!-- Arithmetic Mean --&gt;
&lt;defs&gt;
&lt;path d="M 34.1875 63.1875 
L 20.796875 26.90625 
L 47.609375 26.90625 
z
M 28.609375 72.90625 
L 39.796875 72.90625 
L 67.578125 0 
L 57.328125 0 
L 50.6875 18.703125 
L 17.828125 18.703125 
L 11.1875 0 
L 0.78125 0 
z
" id="DejaVuSans-65"&gt;&lt;/path&gt;
&lt;path d="M 41.109375 46.296875 
Q 39.59375 47.171875 37.8125 47.578125 
Q 36.03125 48 33.890625 48 
Q 26.265625 48 22.1875 43.046875 
Q 18.109375 38.09375 18.109375 28.8125 
L 18.109375 0 
L 9.078125 0 
L 9.078125 54.6875 
L 18.109375 54.6875 
L 18.109375 46.1875 
Q 20.953125 51.171875 25.484375 53.578125 
Q 30.03125 56 36.53125 56 
Q 37.453125 56 38.578125 55.875 
Q 39.703125 55.765625 41.0625 55.515625 
z
" id="DejaVuSans-114"&gt;&lt;/path&gt;
&lt;path d="M 9.421875 54.6875 
L 18.40625 54.6875 
L 18.40625 0 
L 9.421875 0 
z
M 9.421875 75.984375 
L 18.40625 75.984375 
L 18.40625 64.59375 
L 9.421875 64.59375 
z
" id="DejaVuSans-105"&gt;&lt;/path&gt;
&lt;path d="M 18.3125 70.21875 
L 18.3125 54.6875 
L 36.8125 54.6875 
L 36.8125 47.703125 
L 18.3125 47.703125 
L 18.3125 18.015625 
Q 18.3125 11.328125 20.140625 9.421875 
Q 21.96875 7.515625 27.59375 7.515625 
L 36.8125 7.515625 
L 36.8125 0 
L 27.59375 0 
Q 17.1875 0 13.234375 3.875 
Q 9.28125 7.765625 9.28125 18.015625 
L 9.28125 47.703125 
L 2.6875 47.703125 
L 2.6875 54.6875 
L 9.28125 54.6875 
L 9.28125 70.21875 
z
" id="DejaVuSans-116"&gt;&lt;/path&gt;
&lt;path d="M 54.890625 33.015625 
L 54.890625 0 
L 45.90625 0 
L 45.90625 32.71875 
Q 45.90625 40.484375 42.875 44.328125 
Q 39.84375 48.1875 33.796875 48.1875 
Q 26.515625 48.1875 22.3125 43.546875 
Q 18.109375 38.921875 18.109375 30.90625 
L 18.109375 0 
L 9.078125 0 
L 9.078125 75.984375 
L 18.109375 75.984375 
L 18.109375 46.1875 
Q 21.34375 51.125 25.703125 53.5625 
Q 30.078125 56 35.796875 56 
Q 45.21875 56 50.046875 50.171875 
Q 54.890625 44.34375 54.890625 33.015625 
z
" id="DejaVuSans-104"&gt;&lt;/path&gt;
&lt;path d="M 52 44.1875 
Q 55.375 50.25 60.0625 53.125 
Q 64.75 56 71.09375 56 
Q 79.640625 56 84.28125 50.015625 
Q 88.921875 44.046875 88.921875 33.015625 
L 88.921875 0 
L 79.890625 0 
L 79.890625 32.71875 
Q 79.890625 40.578125 77.09375 44.375 
Q 74.3125 48.1875 68.609375 48.1875 
Q 61.625 48.1875 57.5625 43.546875 
Q 53.515625 38.921875 53.515625 30.90625 
L 53.515625 0 
L 44.484375 0 
L 44.484375 32.71875 
Q 44.484375 40.625 41.703125 44.40625 
Q 38.921875 48.1875 33.109375 48.1875 
Q 26.21875 48.1875 22.15625 43.53125 
Q 18.109375 38.875 18.109375 30.90625 
L 18.109375 0 
L 9.078125 0 
L 9.078125 54.6875 
L 18.109375 54.6875 
L 18.109375 46.1875 
Q 21.1875 51.21875 25.484375 53.609375 
Q 29.78125 56 35.6875 56 
Q 41.65625 56 45.828125 52.96875 
Q 50 49.953125 52 44.1875 
z
" id="DejaVuSans-109"&gt;&lt;/path&gt;
&lt;path d="M 56.203125 29.59375 
L 56.203125 25.203125 
L 14.890625 25.203125 
Q 15.484375 15.921875 20.484375 11.0625 
Q 25.484375 6.203125 34.421875 6.203125 
Q 39.59375 6.203125 44.453125 7.46875 
Q 49.3125 8.734375 54.109375 11.28125 
L 54.109375 2.78125 
Q 49.265625 0.734375 44.1875 -0.34375 
Q 39.109375 -1.421875 33.890625 -1.421875 
Q 20.796875 -1.421875 13.15625 6.1875 
Q 5.515625 13.8125 5.515625 26.8125 
Q 5.515625 40.234375 12.765625 48.109375 
Q 20.015625 56 32.328125 56 
Q 43.359375 56 49.78125 48.890625 
Q 56.203125 41.796875 56.203125 29.59375 
z
M 47.21875 32.234375 
Q 47.125 39.59375 43.09375 43.984375 
Q 39.0625 48.390625 32.421875 48.390625 
Q 24.90625 48.390625 20.390625 44.140625 
Q 15.875 39.890625 15.1875 32.171875 
z
" id="DejaVuSans-101"&gt;&lt;/path&gt;
&lt;path d="M 48.78125 52.59375 
L 48.78125 44.1875 
Q 44.96875 46.296875 41.140625 47.34375 
Q 37.3125 48.390625 33.40625 48.390625 
Q 24.65625 48.390625 19.8125 42.84375 
Q 14.984375 37.3125 14.984375 27.296875 
Q 14.984375 17.28125 19.8125 11.734375 
Q 24.65625 6.203125 33.40625 6.203125 
Q 37.3125 6.203125 41.140625 7.25 
Q 44.96875 8.296875 48.78125 10.40625 
L 48.78125 2.09375 
Q 45.015625 0.34375 40.984375 -0.53125 
Q 36.96875 -1.421875 32.421875 -1.421875 
Q 20.0625 -1.421875 12.78125 6.34375 
Q 5.515625 14.109375 5.515625 27.296875 
Q 5.515625 40.671875 12.859375 48.328125 
Q 20.21875 56 33.015625 56 
Q 37.15625 56 41.109375 55.140625 
Q 45.0625 54.296875 48.78125 52.59375 
z
" id="DejaVuSans-99"&gt;&lt;/path&gt;
&lt;path id="DejaVuSans-32"&gt;&lt;/path&gt;
&lt;path d="M 9.8125 72.90625 
L 24.515625 72.90625 
L 43.109375 23.296875 
L 61.8125 72.90625 
L 76.515625 72.90625 
L 76.515625 0 
L 66.890625 0 
L 66.890625 64.015625 
L 48.09375 14.015625 
L 38.1875 14.015625 
L 19.390625 64.015625 
L 19.390625 0 
L 9.8125 0 
z
" id="DejaVuSans-77"&gt;&lt;/path&gt;
&lt;path d="M 34.28125 27.484375 
Q 23.390625 27.484375 19.1875 25 
Q 14.984375 22.515625 14.984375 16.5 
Q 14.984375 11.71875 18.140625 8.90625 
Q 21.296875 6.109375 26.703125 6.109375 
Q 34.1875 6.109375 38.703125 11.40625 
Q 43.21875 16.703125 43.21875 25.484375 
L 43.21875 27.484375 
z
M 52.203125 31.203125 
L 52.203125 0 
L 43.21875 0 
L 43.21875 8.296875 
Q 40.140625 3.328125 35.546875 0.953125 
Q 30.953125 -1.421875 24.3125 -1.421875 
Q 15.921875 -1.421875 10.953125 3.296875 
Q 6 8.015625 6 15.921875 
Q 6 25.140625 12.171875 29.828125 
Q 18.359375 34.515625 30.609375 34.515625 
L 43.21875 34.515625 
L 43.21875 35.40625 
Q 43.21875 41.609375 39.140625 45 
Q 35.0625 48.390625 27.6875 48.390625 
Q 23 48.390625 18.546875 47.265625 
Q 14.109375 46.140625 10.015625 43.890625 
L 10.015625 52.203125 
Q 14.9375 54.109375 19.578125 55.046875 
Q 24.21875 56 28.609375 56 
Q 40.484375 56 46.34375 49.84375 
Q 52.203125 43.703125 52.203125 31.203125 
z
" id="DejaVuSans-97"&gt;&lt;/path&gt;
&lt;path d="M 54.890625 33.015625 
L 54.890625 0 
L 45.90625 0 
L 45.90625 32.71875 
Q 45.90625 40.484375 42.875 44.328125 
Q 39.84375 48.1875 33.796875 48.1875 
Q 26.515625 48.1875 22.3125 43.546875 
Q 18.109375 38.921875 18.109375 30.90625 
L 18.109375 0 
L 9.078125 0 
L 9.078125 54.6875 
L 18.109375 54.6875 
L 18.109375 46.1875 
Q 21.34375 51.125 25.703125 53.5625 
Q 30.078125 56 35.796875 56 
Q 45.21875 56 50.046875 50.171875 
Q 54.890625 44.34375 54.890625 33.015625 
z
" id="DejaVuSans-110"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(189.721457 76.385455)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-65"&gt;&lt;/use&gt;
&lt;use x="68.408203" xlink:href="#DejaVuSans-114"&gt;&lt;/use&gt;
&lt;use x="109.521484" xlink:href="#DejaVuSans-105"&gt;&lt;/use&gt;
&lt;use x="137.304688" xlink:href="#DejaVuSans-116"&gt;&lt;/use&gt;
&lt;use x="176.513672" xlink:href="#DejaVuSans-104"&gt;&lt;/use&gt;
&lt;use x="239.892578" xlink:href="#DejaVuSans-109"&gt;&lt;/use&gt;
&lt;use x="337.304688" xlink:href="#DejaVuSans-101"&gt;&lt;/use&gt;
&lt;use x="398.828125" xlink:href="#DejaVuSans-116"&gt;&lt;/use&gt;
&lt;use x="438.037109" xlink:href="#DejaVuSans-105"&gt;&lt;/use&gt;
&lt;use x="465.820312" xlink:href="#DejaVuSans-99"&gt;&lt;/use&gt;
&lt;use x="520.800781" xlink:href="#DejaVuSans-32"&gt;&lt;/use&gt;
&lt;use x="552.587891" xlink:href="#DejaVuSans-77"&gt;&lt;/use&gt;
&lt;use x="638.867188" xlink:href="#DejaVuSans-101"&gt;&lt;/use&gt;
&lt;use x="700.390625" xlink:href="#DejaVuSans-97"&gt;&lt;/use&gt;
&lt;use x="761.669922" xlink:href="#DejaVuSans-110"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;defs&gt;
&lt;clippath id="p135daa0e99"&gt;
&lt;rect height="217.44" width="334.8" x="30.103125" y="7.2"&gt;&lt;/rect&gt;
&lt;/clippath&gt;
&lt;/defs&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Geometric-Mean"&gt;Geometric Mean&lt;a class="anchor-link" href="#Geometric-Mean"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The geometric mean is calculated by multiplying all numbers in a set, and then calculating the &lt;code&gt;nth&lt;/code&gt; root of the multiplied figure, when n is the count of numbers. Since this using the &lt;code&gt;multiplicative&lt;/code&gt; nature of the dataset to find a figure to summarise by, rather than an &lt;code&gt;additive&lt;/code&gt; figure of the arithmetic mean, thus making it more suitable for datasets with a multiplicative relationship.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;We calculate the nth root by raising to the power of the reciprocal.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="When-to-use"&gt;When to use&lt;a class="anchor-link" href="#When-to-use"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If the dataset has a multiplicative nature (eg, growth in population, interest rates, etc), then geometric mean will be a more suitable way of summarising the dataset. The geometric mean is also useful when trying to summarise data with differenting scales or units as the geometric mean is technically unitless.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [6]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;multiply_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;typing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="c1"&gt;# Multiply elements one by one &lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;  
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;  

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;geometric_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;typing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;dataset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;multiply_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"Geometric Mean: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;geometric_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plot_1d_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geometric_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'x'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;markersize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;annotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Geometric Mean'&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="n"&gt;geometric_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="n"&gt;geometric_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mf"&gt;5.1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;arrowprops&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'width'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Geometric Mean: 32.54181835292063
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt output_prompt"&gt;Out[6]:&lt;/div&gt;
&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;Text(32.54181835292063, 5.1, 'Geometric Mean')&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_svg output_subarea"&gt;
&lt;!--?xml version="1.0" encoding="utf-8" standalone="no"?--&gt;
&lt;!-- Created with matplotlib (https://matplotlib.org/) --&gt;
&lt;svg height="248.518125pt" version="1.1" viewbox="0 0 372.704232 248.518125" width="372.704232pt" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;
&lt;defs&gt;
&lt;style type="text/css"&gt;
*{stroke-linecap:butt;stroke-linejoin:round;}
  &lt;/style&gt;
&lt;/defs&gt;
&lt;g id="figure_1"&gt;
&lt;g id="patch_1"&gt;
&lt;path d="M 0 248.518125 
L 372.704232 248.518125 
L 372.704232 0 
L 0 0 
z
" style="fill:none;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="axes_1"&gt;
&lt;g id="patch_2"&gt;
&lt;path d="M 30.103125 224.64 
L 364.903125 224.64 
L 364.903125 7.2 
L 30.103125 7.2 
z
" style="fill:#ffffff;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="matplotlib.axis_1"&gt;
&lt;g id="xtick_1"&gt;
&lt;g id="line2d_1"&gt;
&lt;defs&gt;
&lt;path d="M 0 0 
L 0 3.5 
" id="m9f84e9ad44" style="stroke:#000000;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="42.183537" xlink:href="#m9f84e9ad44" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_1"&gt;
&lt;!-- 0 --&gt;
&lt;defs&gt;
&lt;path d="M 31.78125 66.40625 
Q 24.171875 66.40625 20.328125 58.90625 
Q 16.5 51.421875 16.5 36.375 
Q 16.5 21.390625 20.328125 13.890625 
Q 24.171875 6.390625 31.78125 6.390625 
Q 39.453125 6.390625 43.28125 13.890625 
Q 47.125 21.390625 47.125 36.375 
Q 47.125 51.421875 43.28125 58.90625 
Q 39.453125 66.40625 31.78125 66.40625 
z
M 31.78125 74.21875 
Q 44.046875 74.21875 50.515625 64.515625 
Q 56.984375 54.828125 56.984375 36.375 
Q 56.984375 17.96875 50.515625 8.265625 
Q 44.046875 -1.421875 31.78125 -1.421875 
Q 19.53125 -1.421875 13.0625 8.265625 
Q 6.59375 17.96875 6.59375 36.375 
Q 6.59375 54.828125 13.0625 64.515625 
Q 19.53125 74.21875 31.78125 74.21875 
z
" id="DejaVuSans-48"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(39.002287 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_2"&gt;
&lt;g id="line2d_2"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="104.938926" xlink:href="#m9f84e9ad44" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_2"&gt;
&lt;!-- 20 --&gt;
&lt;defs&gt;
&lt;path d="M 19.1875 8.296875 
L 53.609375 8.296875 
L 53.609375 0 
L 7.328125 0 
L 7.328125 8.296875 
Q 12.9375 14.109375 22.625 23.890625 
Q 32.328125 33.6875 34.8125 36.53125 
Q 39.546875 41.84375 41.421875 45.53125 
Q 43.3125 49.21875 43.3125 52.78125 
Q 43.3125 58.59375 39.234375 62.25 
Q 35.15625 65.921875 28.609375 65.921875 
Q 23.96875 65.921875 18.8125 64.3125 
Q 13.671875 62.703125 7.8125 59.421875 
L 7.8125 69.390625 
Q 13.765625 71.78125 18.9375 73 
Q 24.125 74.21875 28.421875 74.21875 
Q 39.75 74.21875 46.484375 68.546875 
Q 53.21875 62.890625 53.21875 53.421875 
Q 53.21875 48.921875 51.53125 44.890625 
Q 49.859375 40.875 45.40625 35.40625 
Q 44.1875 33.984375 37.640625 27.21875 
Q 31.109375 20.453125 19.1875 8.296875 
z
" id="DejaVuSans-50"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(98.576426 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-50"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_3"&gt;
&lt;g id="line2d_3"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="167.694315" xlink:href="#m9f84e9ad44" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_3"&gt;
&lt;!-- 40 --&gt;
&lt;defs&gt;
&lt;path d="M 37.796875 64.3125 
L 12.890625 25.390625 
L 37.796875 25.390625 
z
M 35.203125 72.90625 
L 47.609375 72.90625 
L 47.609375 25.390625 
L 58.015625 25.390625 
L 58.015625 17.1875 
L 47.609375 17.1875 
L 47.609375 0 
L 37.796875 0 
L 37.796875 17.1875 
L 4.890625 17.1875 
L 4.890625 26.703125 
z
" id="DejaVuSans-52"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(161.331815 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_4"&gt;
&lt;g id="line2d_4"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="230.449704" xlink:href="#m9f84e9ad44" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_4"&gt;
&lt;!-- 60 --&gt;
&lt;defs&gt;
&lt;path d="M 33.015625 40.375 
Q 26.375 40.375 22.484375 35.828125 
Q 18.609375 31.296875 18.609375 23.390625 
Q 18.609375 15.53125 22.484375 10.953125 
Q 26.375 6.390625 33.015625 6.390625 
Q 39.65625 6.390625 43.53125 10.953125 
Q 47.40625 15.53125 47.40625 23.390625 
Q 47.40625 31.296875 43.53125 35.828125 
Q 39.65625 40.375 33.015625 40.375 
z
M 52.59375 71.296875 
L 52.59375 62.3125 
Q 48.875 64.0625 45.09375 64.984375 
Q 41.3125 65.921875 37.59375 65.921875 
Q 27.828125 65.921875 22.671875 59.328125 
Q 17.53125 52.734375 16.796875 39.40625 
Q 19.671875 43.65625 24.015625 45.921875 
Q 28.375 48.1875 33.59375 48.1875 
Q 44.578125 48.1875 50.953125 41.515625 
Q 57.328125 34.859375 57.328125 23.390625 
Q 57.328125 12.15625 50.6875 5.359375 
Q 44.046875 -1.421875 33.015625 -1.421875 
Q 20.359375 -1.421875 13.671875 8.265625 
Q 6.984375 17.96875 6.984375 36.375 
Q 6.984375 53.65625 15.1875 63.9375 
Q 23.390625 74.21875 37.203125 74.21875 
Q 40.921875 74.21875 44.703125 73.484375 
Q 48.484375 72.75 52.59375 71.296875 
z
" id="DejaVuSans-54"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(224.087204 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-54"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_5"&gt;
&lt;g id="line2d_5"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="293.205093" xlink:href="#m9f84e9ad44" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_5"&gt;
&lt;!-- 80 --&gt;
&lt;defs&gt;
&lt;path d="M 31.78125 34.625 
Q 24.75 34.625 20.71875 30.859375 
Q 16.703125 27.09375 16.703125 20.515625 
Q 16.703125 13.921875 20.71875 10.15625 
Q 24.75 6.390625 31.78125 6.390625 
Q 38.8125 6.390625 42.859375 10.171875 
Q 46.921875 13.96875 46.921875 20.515625 
Q 46.921875 27.09375 42.890625 30.859375 
Q 38.875 34.625 31.78125 34.625 
z
M 21.921875 38.8125 
Q 15.578125 40.375 12.03125 44.71875 
Q 8.5 49.078125 8.5 55.328125 
Q 8.5 64.0625 14.71875 69.140625 
Q 20.953125 74.21875 31.78125 74.21875 
Q 42.671875 74.21875 48.875 69.140625 
Q 55.078125 64.0625 55.078125 55.328125 
Q 55.078125 49.078125 51.53125 44.71875 
Q 48 40.375 41.703125 38.8125 
Q 48.828125 37.15625 52.796875 32.3125 
Q 56.78125 27.484375 56.78125 20.515625 
Q 56.78125 9.90625 50.3125 4.234375 
Q 43.84375 -1.421875 31.78125 -1.421875 
Q 19.734375 -1.421875 13.25 4.234375 
Q 6.78125 9.90625 6.78125 20.515625 
Q 6.78125 27.484375 10.78125 32.3125 
Q 14.796875 37.15625 21.921875 38.8125 
z
M 18.3125 54.390625 
Q 18.3125 48.734375 21.84375 45.5625 
Q 25.390625 42.390625 31.78125 42.390625 
Q 38.140625 42.390625 41.71875 45.5625 
Q 45.3125 48.734375 45.3125 54.390625 
Q 45.3125 60.0625 41.71875 63.234375 
Q 38.140625 66.40625 31.78125 66.40625 
Q 25.390625 66.40625 21.84375 63.234375 
Q 18.3125 60.0625 18.3125 54.390625 
z
" id="DejaVuSans-56"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(286.842593 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-56"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_6"&gt;
&lt;g id="line2d_6"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="355.960482" xlink:href="#m9f84e9ad44" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_6"&gt;
&lt;!-- 100 --&gt;
&lt;defs&gt;
&lt;path d="M 12.40625 8.296875 
L 28.515625 8.296875 
L 28.515625 63.921875 
L 10.984375 60.40625 
L 10.984375 69.390625 
L 28.421875 72.90625 
L 38.28125 72.90625 
L 38.28125 8.296875 
L 54.390625 8.296875 
L 54.390625 0 
L 12.40625 0 
z
" id="DejaVuSans-49"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(346.416732 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-49"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;use x="127.246094" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="matplotlib.axis_2"&gt;
&lt;g id="ytick_1"&gt;
&lt;g id="line2d_7"&gt;
&lt;defs&gt;
&lt;path d="M 0 0 
L -3.5 0 
" id="m7fe0f18035" style="stroke:#000000;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m7fe0f18035" y="194.989091"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_7"&gt;
&lt;!-- 4.8 --&gt;
&lt;defs&gt;
&lt;path d="M 10.6875 12.40625 
L 21 12.40625 
L 21 0 
L 10.6875 0 
z
" id="DejaVuSans-46"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 198.78831)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-56"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_2"&gt;
&lt;g id="line2d_8"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m7fe0f18035" y="155.454545"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_8"&gt;
&lt;!-- 4.9 --&gt;
&lt;defs&gt;
&lt;path d="M 10.984375 1.515625 
L 10.984375 10.5 
Q 14.703125 8.734375 18.5 7.8125 
Q 22.3125 6.890625 25.984375 6.890625 
Q 35.75 6.890625 40.890625 13.453125 
Q 46.046875 20.015625 46.78125 33.40625 
Q 43.953125 29.203125 39.59375 26.953125 
Q 35.25 24.703125 29.984375 24.703125 
Q 19.046875 24.703125 12.671875 31.3125 
Q 6.296875 37.9375 6.296875 49.421875 
Q 6.296875 60.640625 12.9375 67.421875 
Q 19.578125 74.21875 30.609375 74.21875 
Q 43.265625 74.21875 49.921875 64.515625 
Q 56.59375 54.828125 56.59375 36.375 
Q 56.59375 19.140625 48.40625 8.859375 
Q 40.234375 -1.421875 26.421875 -1.421875 
Q 22.703125 -1.421875 18.890625 -0.6875 
Q 15.09375 0.046875 10.984375 1.515625 
z
M 30.609375 32.421875 
Q 37.25 32.421875 41.125 36.953125 
Q 45.015625 41.5 45.015625 49.421875 
Q 45.015625 57.28125 41.125 61.84375 
Q 37.25 66.40625 30.609375 66.40625 
Q 23.96875 66.40625 20.09375 61.84375 
Q 16.21875 57.28125 16.21875 49.421875 
Q 16.21875 41.5 20.09375 36.953125 
Q 23.96875 32.421875 30.609375 32.421875 
z
" id="DejaVuSans-57"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 159.253764)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-57"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_3"&gt;
&lt;g id="line2d_9"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m7fe0f18035" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_9"&gt;
&lt;!-- 5.0 --&gt;
&lt;defs&gt;
&lt;path d="M 10.796875 72.90625 
L 49.515625 72.90625 
L 49.515625 64.59375 
L 19.828125 64.59375 
L 19.828125 46.734375 
Q 21.96875 47.46875 24.109375 47.828125 
Q 26.265625 48.1875 28.421875 48.1875 
Q 40.625 48.1875 47.75 41.5 
Q 54.890625 34.8125 54.890625 23.390625 
Q 54.890625 11.625 47.5625 5.09375 
Q 40.234375 -1.421875 26.90625 -1.421875 
Q 22.3125 -1.421875 17.546875 -0.640625 
Q 12.796875 0.140625 7.71875 1.703125 
L 7.71875 11.625 
Q 12.109375 9.234375 16.796875 8.0625 
Q 21.484375 6.890625 26.703125 6.890625 
Q 35.15625 6.890625 40.078125 11.328125 
Q 45.015625 15.765625 45.015625 23.390625 
Q 45.015625 31 40.078125 35.4375 
Q 35.15625 39.890625 26.703125 39.890625 
Q 22.75 39.890625 18.8125 39.015625 
Q 14.890625 38.140625 10.796875 36.28125 
z
" id="DejaVuSans-53"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 119.719219)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_4"&gt;
&lt;g id="line2d_10"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m7fe0f18035" y="76.385455"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_10"&gt;
&lt;!-- 5.1 --&gt;
&lt;g transform="translate(7.2 80.184673)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-49"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_5"&gt;
&lt;g id="line2d_11"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m7fe0f18035" y="36.850909"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_11"&gt;
&lt;!-- 5.2 --&gt;
&lt;g transform="translate(7.2 40.650128)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-50"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="line2d_12"&gt;
&lt;defs&gt;
&lt;path d="M -3 3 
L 3 -3 
M -3 -3 
L 3 3 
" id="m620e3d815d" style="stroke:#1f77b4;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g clip-path="url(#p87ada79b58)"&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="299.480632" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="89.250079" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="142.59216" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="133.178851" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="98.663387" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="86.11231" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="315.169479" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="261.827399" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="280.654015" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="214.760857" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="57.872385" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="130.041082" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="136.316621" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="246.138551" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="286.929554" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="268.102938" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="123.765543" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="330.858326" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="305.756171" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="324.582788" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="261.827399" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="211.623088" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="133.178851" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="224.174165" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="280.654015" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="45.321307" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="349.684943" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="108.076696" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="324.582788" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="214.760857" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="180.245393" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="104.938926" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="130.041082" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="349.684943" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="180.245393" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="86.11231" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="195.93424" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="82.97454" xlink:href="#m620e3d815d" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="line2d_13"&gt;
&lt;defs&gt;
&lt;path d="M -25 25 
L 25 -25 
M -25 -25 
L 25 25 
" id="m95c4ece94b" style="stroke:#ff0000;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g clip-path="url(#p87ada79b58)"&gt;
&lt;use style="fill:#ff0000;stroke:#ff0000;" x="144.292261" xlink:href="#m95c4ece94b" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="patch_3"&gt;
&lt;path d="M 30.103125 224.64 
L 30.103125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_4"&gt;
&lt;path d="M 364.903125 224.64 
L 364.903125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_5"&gt;
&lt;path d="M 30.103125 224.64 
L 364.903125 224.64 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_6"&gt;
&lt;path d="M 30.103125 7.2 
L 364.903125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_7"&gt;
&lt;path d="M 144.342261 80.463161 
Q 144.342261 92.190493 144.342261 103.917825 
L 150.292261 103.917825 
Q 147.292261 109.918913 144.292261 115.92 
Q 141.292261 109.918913 138.292261 103.917825 
L 144.242261 103.917825 
Q 144.242261 92.190493 144.242261 80.463161 
L 144.342261 80.463161 
z
" style="fill:#1f77b4;stroke:#000000;stroke-linecap:round;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="text_12"&gt;
&lt;!-- Geometric Mean --&gt;
&lt;defs&gt;
&lt;path d="M 59.515625 10.40625 
L 59.515625 29.984375 
L 43.40625 29.984375 
L 43.40625 38.09375 
L 69.28125 38.09375 
L 69.28125 6.78125 
Q 63.578125 2.734375 56.6875 0.65625 
Q 49.8125 -1.421875 42 -1.421875 
Q 24.90625 -1.421875 15.25 8.5625 
Q 5.609375 18.5625 5.609375 36.375 
Q 5.609375 54.25 15.25 64.234375 
Q 24.90625 74.21875 42 74.21875 
Q 49.125 74.21875 55.546875 72.453125 
Q 61.96875 70.703125 67.390625 67.28125 
L 67.390625 56.78125 
Q 61.921875 61.421875 55.765625 63.765625 
Q 49.609375 66.109375 42.828125 66.109375 
Q 29.4375 66.109375 22.71875 58.640625 
Q 16.015625 51.171875 16.015625 36.375 
Q 16.015625 21.625 22.71875 14.15625 
Q 29.4375 6.6875 42.828125 6.6875 
Q 48.046875 6.6875 52.140625 7.59375 
Q 56.25 8.5 59.515625 10.40625 
z
" id="DejaVuSans-71"&gt;&lt;/path&gt;
&lt;path d="M 56.203125 29.59375 
L 56.203125 25.203125 
L 14.890625 25.203125 
Q 15.484375 15.921875 20.484375 11.0625 
Q 25.484375 6.203125 34.421875 6.203125 
Q 39.59375 6.203125 44.453125 7.46875 
Q 49.3125 8.734375 54.109375 11.28125 
L 54.109375 2.78125 
Q 49.265625 0.734375 44.1875 -0.34375 
Q 39.109375 -1.421875 33.890625 -1.421875 
Q 20.796875 -1.421875 13.15625 6.1875 
Q 5.515625 13.8125 5.515625 26.8125 
Q 5.515625 40.234375 12.765625 48.109375 
Q 20.015625 56 32.328125 56 
Q 43.359375 56 49.78125 48.890625 
Q 56.203125 41.796875 56.203125 29.59375 
z
M 47.21875 32.234375 
Q 47.125 39.59375 43.09375 43.984375 
Q 39.0625 48.390625 32.421875 48.390625 
Q 24.90625 48.390625 20.390625 44.140625 
Q 15.875 39.890625 15.1875 32.171875 
z
" id="DejaVuSans-101"&gt;&lt;/path&gt;
&lt;path d="M 30.609375 48.390625 
Q 23.390625 48.390625 19.1875 42.75 
Q 14.984375 37.109375 14.984375 27.296875 
Q 14.984375 17.484375 19.15625 11.84375 
Q 23.34375 6.203125 30.609375 6.203125 
Q 37.796875 6.203125 41.984375 11.859375 
Q 46.1875 17.53125 46.1875 27.296875 
Q 46.1875 37.015625 41.984375 42.703125 
Q 37.796875 48.390625 30.609375 48.390625 
z
M 30.609375 56 
Q 42.328125 56 49.015625 48.375 
Q 55.71875 40.765625 55.71875 27.296875 
Q 55.71875 13.875 49.015625 6.21875 
Q 42.328125 -1.421875 30.609375 -1.421875 
Q 18.84375 -1.421875 12.171875 6.21875 
Q 5.515625 13.875 5.515625 27.296875 
Q 5.515625 40.765625 12.171875 48.375 
Q 18.84375 56 30.609375 56 
z
" id="DejaVuSans-111"&gt;&lt;/path&gt;
&lt;path d="M 52 44.1875 
Q 55.375 50.25 60.0625 53.125 
Q 64.75 56 71.09375 56 
Q 79.640625 56 84.28125 50.015625 
Q 88.921875 44.046875 88.921875 33.015625 
L 88.921875 0 
L 79.890625 0 
L 79.890625 32.71875 
Q 79.890625 40.578125 77.09375 44.375 
Q 74.3125 48.1875 68.609375 48.1875 
Q 61.625 48.1875 57.5625 43.546875 
Q 53.515625 38.921875 53.515625 30.90625 
L 53.515625 0 
L 44.484375 0 
L 44.484375 32.71875 
Q 44.484375 40.625 41.703125 44.40625 
Q 38.921875 48.1875 33.109375 48.1875 
Q 26.21875 48.1875 22.15625 43.53125 
Q 18.109375 38.875 18.109375 30.90625 
L 18.109375 0 
L 9.078125 0 
L 9.078125 54.6875 
L 18.109375 54.6875 
L 18.109375 46.1875 
Q 21.1875 51.21875 25.484375 53.609375 
Q 29.78125 56 35.6875 56 
Q 41.65625 56 45.828125 52.96875 
Q 50 49.953125 52 44.1875 
z
" id="DejaVuSans-109"&gt;&lt;/path&gt;
&lt;path d="M 18.3125 70.21875 
L 18.3125 54.6875 
L 36.8125 54.6875 
L 36.8125 47.703125 
L 18.3125 47.703125 
L 18.3125 18.015625 
Q 18.3125 11.328125 20.140625 9.421875 
Q 21.96875 7.515625 27.59375 7.515625 
L 36.8125 7.515625 
L 36.8125 0 
L 27.59375 0 
Q 17.1875 0 13.234375 3.875 
Q 9.28125 7.765625 9.28125 18.015625 
L 9.28125 47.703125 
L 2.6875 47.703125 
L 2.6875 54.6875 
L 9.28125 54.6875 
L 9.28125 70.21875 
z
" id="DejaVuSans-116"&gt;&lt;/path&gt;
&lt;path d="M 41.109375 46.296875 
Q 39.59375 47.171875 37.8125 47.578125 
Q 36.03125 48 33.890625 48 
Q 26.265625 48 22.1875 43.046875 
Q 18.109375 38.09375 18.109375 28.8125 
L 18.109375 0 
L 9.078125 0 
L 9.078125 54.6875 
L 18.109375 54.6875 
L 18.109375 46.1875 
Q 20.953125 51.171875 25.484375 53.578125 
Q 30.03125 56 36.53125 56 
Q 37.453125 56 38.578125 55.875 
Q 39.703125 55.765625 41.0625 55.515625 
z
" id="DejaVuSans-114"&gt;&lt;/path&gt;
&lt;path d="M 9.421875 54.6875 
L 18.40625 54.6875 
L 18.40625 0 
L 9.421875 0 
z
M 9.421875 75.984375 
L 18.40625 75.984375 
L 18.40625 64.59375 
L 9.421875 64.59375 
z
" id="DejaVuSans-105"&gt;&lt;/path&gt;
&lt;path d="M 48.78125 52.59375 
L 48.78125 44.1875 
Q 44.96875 46.296875 41.140625 47.34375 
Q 37.3125 48.390625 33.40625 48.390625 
Q 24.65625 48.390625 19.8125 42.84375 
Q 14.984375 37.3125 14.984375 27.296875 
Q 14.984375 17.28125 19.8125 11.734375 
Q 24.65625 6.203125 33.40625 6.203125 
Q 37.3125 6.203125 41.140625 7.25 
Q 44.96875 8.296875 48.78125 10.40625 
L 48.78125 2.09375 
Q 45.015625 0.34375 40.984375 -0.53125 
Q 36.96875 -1.421875 32.421875 -1.421875 
Q 20.0625 -1.421875 12.78125 6.34375 
Q 5.515625 14.109375 5.515625 27.296875 
Q 5.515625 40.671875 12.859375 48.328125 
Q 20.21875 56 33.015625 56 
Q 37.15625 56 41.109375 55.140625 
Q 45.0625 54.296875 48.78125 52.59375 
z
" id="DejaVuSans-99"&gt;&lt;/path&gt;
&lt;path id="DejaVuSans-32"&gt;&lt;/path&gt;
&lt;path d="M 9.8125 72.90625 
L 24.515625 72.90625 
L 43.109375 23.296875 
L 61.8125 72.90625 
L 76.515625 72.90625 
L 76.515625 0 
L 66.890625 0 
L 66.890625 64.015625 
L 48.09375 14.015625 
L 38.1875 14.015625 
L 19.390625 64.015625 
L 19.390625 0 
L 9.8125 0 
z
" id="DejaVuSans-77"&gt;&lt;/path&gt;
&lt;path d="M 34.28125 27.484375 
Q 23.390625 27.484375 19.1875 25 
Q 14.984375 22.515625 14.984375 16.5 
Q 14.984375 11.71875 18.140625 8.90625 
Q 21.296875 6.109375 26.703125 6.109375 
Q 34.1875 6.109375 38.703125 11.40625 
Q 43.21875 16.703125 43.21875 25.484375 
L 43.21875 27.484375 
z
M 52.203125 31.203125 
L 52.203125 0 
L 43.21875 0 
L 43.21875 8.296875 
Q 40.140625 3.328125 35.546875 0.953125 
Q 30.953125 -1.421875 24.3125 -1.421875 
Q 15.921875 -1.421875 10.953125 3.296875 
Q 6 8.015625 6 15.921875 
Q 6 25.140625 12.171875 29.828125 
Q 18.359375 34.515625 30.609375 34.515625 
L 43.21875 34.515625 
L 43.21875 35.40625 
Q 43.21875 41.609375 39.140625 45 
Q 35.0625 48.390625 27.6875 48.390625 
Q 23 48.390625 18.546875 47.265625 
Q 14.109375 46.140625 10.015625 43.890625 
L 10.015625 52.203125 
Q 14.9375 54.109375 19.578125 55.046875 
Q 24.21875 56 28.609375 56 
Q 40.484375 56 46.34375 49.84375 
Q 52.203125 43.703125 52.203125 31.203125 
z
" id="DejaVuSans-97"&gt;&lt;/path&gt;
&lt;path d="M 54.890625 33.015625 
L 54.890625 0 
L 45.90625 0 
L 45.90625 32.71875 
Q 45.90625 40.484375 42.875 44.328125 
Q 39.84375 48.1875 33.796875 48.1875 
Q 26.515625 48.1875 22.3125 43.546875 
Q 18.109375 38.921875 18.109375 30.90625 
L 18.109375 0 
L 9.078125 0 
L 9.078125 54.6875 
L 18.109375 54.6875 
L 18.109375 46.1875 
Q 21.34375 51.125 25.703125 53.5625 
Q 30.078125 56 35.796875 56 
Q 45.21875 56 50.046875 50.171875 
Q 54.890625 44.34375 54.890625 33.015625 
z
" id="DejaVuSans-110"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(144.292261 76.385455)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-71"&gt;&lt;/use&gt;
&lt;use x="77.490234" xlink:href="#DejaVuSans-101"&gt;&lt;/use&gt;
&lt;use x="139.013672" xlink:href="#DejaVuSans-111"&gt;&lt;/use&gt;
&lt;use x="200.195312" xlink:href="#DejaVuSans-109"&gt;&lt;/use&gt;
&lt;use x="297.607422" xlink:href="#DejaVuSans-101"&gt;&lt;/use&gt;
&lt;use x="359.130859" xlink:href="#DejaVuSans-116"&gt;&lt;/use&gt;
&lt;use x="398.339844" xlink:href="#DejaVuSans-114"&gt;&lt;/use&gt;
&lt;use x="439.453125" xlink:href="#DejaVuSans-105"&gt;&lt;/use&gt;
&lt;use x="467.236328" xlink:href="#DejaVuSans-99"&gt;&lt;/use&gt;
&lt;use x="522.216797" xlink:href="#DejaVuSans-32"&gt;&lt;/use&gt;
&lt;use x="554.003906" xlink:href="#DejaVuSans-77"&gt;&lt;/use&gt;
&lt;use x="640.283203" xlink:href="#DejaVuSans-101"&gt;&lt;/use&gt;
&lt;use x="701.806641" xlink:href="#DejaVuSans-97"&gt;&lt;/use&gt;
&lt;use x="763.085938" xlink:href="#DejaVuSans-110"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;defs&gt;
&lt;clippath id="p87ada79b58"&gt;
&lt;rect height="217.44" width="334.8" x="30.103125" y="7.2"&gt;&lt;/rect&gt;
&lt;/clippath&gt;
&lt;/defs&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Harmonic-Mean"&gt;Harmonic Mean&lt;a class="anchor-link" href="#Harmonic-Mean"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Harmonic mean is calculated by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;taking the reciprocal of all the numbers in the set&lt;/li&gt;
&lt;li&gt;calculating the arithmetic mean of this reciprocal set&lt;/li&gt;
&lt;li&gt;taking the reciprocal of the calculated mean&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="When-to-use"&gt;When to use&lt;a class="anchor-link" href="#When-to-use"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The harmonic mean is very useful when trying to summarise datasets that are in rates or ratios. For example if you were trying to determine the average rate of travel over a trip with many legs.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [7]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reciprocal_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;typing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;reciprocal_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        
        &lt;span class="n"&gt;reciprocal_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;reciprocal_list&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;harmonic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;typing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;arithmetic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reciprocal_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"Harmonic Mean: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;harmonic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plot_1d_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;harmonic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'x'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;markersize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;annotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Harmonic Mean'&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="n"&gt;harmonic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="n"&gt;harmonic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mf"&gt;5.1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;arrowprops&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'width'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Harmonic Mean: 15.05101860509987
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt output_prompt"&gt;Out[7]:&lt;/div&gt;
&lt;div class="output_text output_subarea output_execute_result"&gt;
&lt;pre&gt;Text(15.05101860509987, 5.1, 'Harmonic Mean')&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_svg output_subarea"&gt;
&lt;!--?xml version="1.0" encoding="utf-8" standalone="no"?--&gt;
&lt;!-- Created with matplotlib (https://matplotlib.org/) --&gt;
&lt;svg height="248.518125pt" version="1.1" viewbox="0 0 372.704232 248.518125" width="372.704232pt" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;
&lt;defs&gt;
&lt;style type="text/css"&gt;
*{stroke-linecap:butt;stroke-linejoin:round;}
  &lt;/style&gt;
&lt;/defs&gt;
&lt;g id="figure_1"&gt;
&lt;g id="patch_1"&gt;
&lt;path d="M 0 248.518125 
L 372.704232 248.518125 
L 372.704232 0 
L 0 0 
z
" style="fill:none;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="axes_1"&gt;
&lt;g id="patch_2"&gt;
&lt;path d="M 30.103125 224.64 
L 364.903125 224.64 
L 364.903125 7.2 
L 30.103125 7.2 
z
" style="fill:#ffffff;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="matplotlib.axis_1"&gt;
&lt;g id="xtick_1"&gt;
&lt;g id="line2d_1"&gt;
&lt;defs&gt;
&lt;path d="M 0 0 
L 0 3.5 
" id="mcbef3ccd98" style="stroke:#000000;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="42.183537" xlink:href="#mcbef3ccd98" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_1"&gt;
&lt;!-- 0 --&gt;
&lt;defs&gt;
&lt;path d="M 31.78125 66.40625 
Q 24.171875 66.40625 20.328125 58.90625 
Q 16.5 51.421875 16.5 36.375 
Q 16.5 21.390625 20.328125 13.890625 
Q 24.171875 6.390625 31.78125 6.390625 
Q 39.453125 6.390625 43.28125 13.890625 
Q 47.125 21.390625 47.125 36.375 
Q 47.125 51.421875 43.28125 58.90625 
Q 39.453125 66.40625 31.78125 66.40625 
z
M 31.78125 74.21875 
Q 44.046875 74.21875 50.515625 64.515625 
Q 56.984375 54.828125 56.984375 36.375 
Q 56.984375 17.96875 50.515625 8.265625 
Q 44.046875 -1.421875 31.78125 -1.421875 
Q 19.53125 -1.421875 13.0625 8.265625 
Q 6.59375 17.96875 6.59375 36.375 
Q 6.59375 54.828125 13.0625 64.515625 
Q 19.53125 74.21875 31.78125 74.21875 
z
" id="DejaVuSans-48"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(39.002287 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_2"&gt;
&lt;g id="line2d_2"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="104.938926" xlink:href="#mcbef3ccd98" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_2"&gt;
&lt;!-- 20 --&gt;
&lt;defs&gt;
&lt;path d="M 19.1875 8.296875 
L 53.609375 8.296875 
L 53.609375 0 
L 7.328125 0 
L 7.328125 8.296875 
Q 12.9375 14.109375 22.625 23.890625 
Q 32.328125 33.6875 34.8125 36.53125 
Q 39.546875 41.84375 41.421875 45.53125 
Q 43.3125 49.21875 43.3125 52.78125 
Q 43.3125 58.59375 39.234375 62.25 
Q 35.15625 65.921875 28.609375 65.921875 
Q 23.96875 65.921875 18.8125 64.3125 
Q 13.671875 62.703125 7.8125 59.421875 
L 7.8125 69.390625 
Q 13.765625 71.78125 18.9375 73 
Q 24.125 74.21875 28.421875 74.21875 
Q 39.75 74.21875 46.484375 68.546875 
Q 53.21875 62.890625 53.21875 53.421875 
Q 53.21875 48.921875 51.53125 44.890625 
Q 49.859375 40.875 45.40625 35.40625 
Q 44.1875 33.984375 37.640625 27.21875 
Q 31.109375 20.453125 19.1875 8.296875 
z
" id="DejaVuSans-50"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(98.576426 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-50"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_3"&gt;
&lt;g id="line2d_3"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="167.694315" xlink:href="#mcbef3ccd98" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_3"&gt;
&lt;!-- 40 --&gt;
&lt;defs&gt;
&lt;path d="M 37.796875 64.3125 
L 12.890625 25.390625 
L 37.796875 25.390625 
z
M 35.203125 72.90625 
L 47.609375 72.90625 
L 47.609375 25.390625 
L 58.015625 25.390625 
L 58.015625 17.1875 
L 47.609375 17.1875 
L 47.609375 0 
L 37.796875 0 
L 37.796875 17.1875 
L 4.890625 17.1875 
L 4.890625 26.703125 
z
" id="DejaVuSans-52"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(161.331815 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_4"&gt;
&lt;g id="line2d_4"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="230.449704" xlink:href="#mcbef3ccd98" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_4"&gt;
&lt;!-- 60 --&gt;
&lt;defs&gt;
&lt;path d="M 33.015625 40.375 
Q 26.375 40.375 22.484375 35.828125 
Q 18.609375 31.296875 18.609375 23.390625 
Q 18.609375 15.53125 22.484375 10.953125 
Q 26.375 6.390625 33.015625 6.390625 
Q 39.65625 6.390625 43.53125 10.953125 
Q 47.40625 15.53125 47.40625 23.390625 
Q 47.40625 31.296875 43.53125 35.828125 
Q 39.65625 40.375 33.015625 40.375 
z
M 52.59375 71.296875 
L 52.59375 62.3125 
Q 48.875 64.0625 45.09375 64.984375 
Q 41.3125 65.921875 37.59375 65.921875 
Q 27.828125 65.921875 22.671875 59.328125 
Q 17.53125 52.734375 16.796875 39.40625 
Q 19.671875 43.65625 24.015625 45.921875 
Q 28.375 48.1875 33.59375 48.1875 
Q 44.578125 48.1875 50.953125 41.515625 
Q 57.328125 34.859375 57.328125 23.390625 
Q 57.328125 12.15625 50.6875 5.359375 
Q 44.046875 -1.421875 33.015625 -1.421875 
Q 20.359375 -1.421875 13.671875 8.265625 
Q 6.984375 17.96875 6.984375 36.375 
Q 6.984375 53.65625 15.1875 63.9375 
Q 23.390625 74.21875 37.203125 74.21875 
Q 40.921875 74.21875 44.703125 73.484375 
Q 48.484375 72.75 52.59375 71.296875 
z
" id="DejaVuSans-54"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(224.087204 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-54"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_5"&gt;
&lt;g id="line2d_5"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="293.205093" xlink:href="#mcbef3ccd98" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_5"&gt;
&lt;!-- 80 --&gt;
&lt;defs&gt;
&lt;path d="M 31.78125 34.625 
Q 24.75 34.625 20.71875 30.859375 
Q 16.703125 27.09375 16.703125 20.515625 
Q 16.703125 13.921875 20.71875 10.15625 
Q 24.75 6.390625 31.78125 6.390625 
Q 38.8125 6.390625 42.859375 10.171875 
Q 46.921875 13.96875 46.921875 20.515625 
Q 46.921875 27.09375 42.890625 30.859375 
Q 38.875 34.625 31.78125 34.625 
z
M 21.921875 38.8125 
Q 15.578125 40.375 12.03125 44.71875 
Q 8.5 49.078125 8.5 55.328125 
Q 8.5 64.0625 14.71875 69.140625 
Q 20.953125 74.21875 31.78125 74.21875 
Q 42.671875 74.21875 48.875 69.140625 
Q 55.078125 64.0625 55.078125 55.328125 
Q 55.078125 49.078125 51.53125 44.71875 
Q 48 40.375 41.703125 38.8125 
Q 48.828125 37.15625 52.796875 32.3125 
Q 56.78125 27.484375 56.78125 20.515625 
Q 56.78125 9.90625 50.3125 4.234375 
Q 43.84375 -1.421875 31.78125 -1.421875 
Q 19.734375 -1.421875 13.25 4.234375 
Q 6.78125 9.90625 6.78125 20.515625 
Q 6.78125 27.484375 10.78125 32.3125 
Q 14.796875 37.15625 21.921875 38.8125 
z
M 18.3125 54.390625 
Q 18.3125 48.734375 21.84375 45.5625 
Q 25.390625 42.390625 31.78125 42.390625 
Q 38.140625 42.390625 41.71875 45.5625 
Q 45.3125 48.734375 45.3125 54.390625 
Q 45.3125 60.0625 41.71875 63.234375 
Q 38.140625 66.40625 31.78125 66.40625 
Q 25.390625 66.40625 21.84375 63.234375 
Q 18.3125 60.0625 18.3125 54.390625 
z
" id="DejaVuSans-56"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(286.842593 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-56"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="xtick_6"&gt;
&lt;g id="line2d_6"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="355.960482" xlink:href="#mcbef3ccd98" y="224.64"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_6"&gt;
&lt;!-- 100 --&gt;
&lt;defs&gt;
&lt;path d="M 12.40625 8.296875 
L 28.515625 8.296875 
L 28.515625 63.921875 
L 10.984375 60.40625 
L 10.984375 69.390625 
L 28.421875 72.90625 
L 38.28125 72.90625 
L 38.28125 8.296875 
L 54.390625 8.296875 
L 54.390625 0 
L 12.40625 0 
z
" id="DejaVuSans-49"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(346.416732 239.238438)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-49"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;use x="127.246094" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="matplotlib.axis_2"&gt;
&lt;g id="ytick_1"&gt;
&lt;g id="line2d_7"&gt;
&lt;defs&gt;
&lt;path d="M 0 0 
L -3.5 0 
" id="m331ee8e03d" style="stroke:#000000;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m331ee8e03d" y="194.989091"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_7"&gt;
&lt;!-- 4.8 --&gt;
&lt;defs&gt;
&lt;path d="M 10.6875 12.40625 
L 21 12.40625 
L 21 0 
L 10.6875 0 
z
" id="DejaVuSans-46"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 198.78831)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-56"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_2"&gt;
&lt;g id="line2d_8"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m331ee8e03d" y="155.454545"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_8"&gt;
&lt;!-- 4.9 --&gt;
&lt;defs&gt;
&lt;path d="M 10.984375 1.515625 
L 10.984375 10.5 
Q 14.703125 8.734375 18.5 7.8125 
Q 22.3125 6.890625 25.984375 6.890625 
Q 35.75 6.890625 40.890625 13.453125 
Q 46.046875 20.015625 46.78125 33.40625 
Q 43.953125 29.203125 39.59375 26.953125 
Q 35.25 24.703125 29.984375 24.703125 
Q 19.046875 24.703125 12.671875 31.3125 
Q 6.296875 37.9375 6.296875 49.421875 
Q 6.296875 60.640625 12.9375 67.421875 
Q 19.578125 74.21875 30.609375 74.21875 
Q 43.265625 74.21875 49.921875 64.515625 
Q 56.59375 54.828125 56.59375 36.375 
Q 56.59375 19.140625 48.40625 8.859375 
Q 40.234375 -1.421875 26.421875 -1.421875 
Q 22.703125 -1.421875 18.890625 -0.6875 
Q 15.09375 0.046875 10.984375 1.515625 
z
M 30.609375 32.421875 
Q 37.25 32.421875 41.125 36.953125 
Q 45.015625 41.5 45.015625 49.421875 
Q 45.015625 57.28125 41.125 61.84375 
Q 37.25 66.40625 30.609375 66.40625 
Q 23.96875 66.40625 20.09375 61.84375 
Q 16.21875 57.28125 16.21875 49.421875 
Q 16.21875 41.5 20.09375 36.953125 
Q 23.96875 32.421875 30.609375 32.421875 
z
" id="DejaVuSans-57"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 159.253764)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-52"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-57"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_3"&gt;
&lt;g id="line2d_9"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m331ee8e03d" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_9"&gt;
&lt;!-- 5.0 --&gt;
&lt;defs&gt;
&lt;path d="M 10.796875 72.90625 
L 49.515625 72.90625 
L 49.515625 64.59375 
L 19.828125 64.59375 
L 19.828125 46.734375 
Q 21.96875 47.46875 24.109375 47.828125 
Q 26.265625 48.1875 28.421875 48.1875 
Q 40.625 48.1875 47.75 41.5 
Q 54.890625 34.8125 54.890625 23.390625 
Q 54.890625 11.625 47.5625 5.09375 
Q 40.234375 -1.421875 26.90625 -1.421875 
Q 22.3125 -1.421875 17.546875 -0.640625 
Q 12.796875 0.140625 7.71875 1.703125 
L 7.71875 11.625 
Q 12.109375 9.234375 16.796875 8.0625 
Q 21.484375 6.890625 26.703125 6.890625 
Q 35.15625 6.890625 40.078125 11.328125 
Q 45.015625 15.765625 45.015625 23.390625 
Q 45.015625 31 40.078125 35.4375 
Q 35.15625 39.890625 26.703125 39.890625 
Q 22.75 39.890625 18.8125 39.015625 
Q 14.890625 38.140625 10.796875 36.28125 
z
" id="DejaVuSans-53"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(7.2 119.719219)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-48"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_4"&gt;
&lt;g id="line2d_10"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m331ee8e03d" y="76.385455"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_10"&gt;
&lt;!-- 5.1 --&gt;
&lt;g transform="translate(7.2 80.184673)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-49"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="ytick_5"&gt;
&lt;g id="line2d_11"&gt;
&lt;g&gt;
&lt;use style="stroke:#000000;stroke-width:0.8;" x="30.103125" xlink:href="#m331ee8e03d" y="36.850909"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="text_11"&gt;
&lt;!-- 5.2 --&gt;
&lt;g transform="translate(7.2 40.650128)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-53"&gt;&lt;/use&gt;
&lt;use x="63.623047" xlink:href="#DejaVuSans-46"&gt;&lt;/use&gt;
&lt;use x="95.410156" xlink:href="#DejaVuSans-50"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="line2d_12"&gt;
&lt;defs&gt;
&lt;path d="M -3 3 
L 3 -3 
M -3 -3 
L 3 3 
" id="m8cc531e8e1" style="stroke:#1f77b4;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g clip-path="url(#p087627c021)"&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="299.480632" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="89.250079" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="142.59216" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="133.178851" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="98.663387" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="86.11231" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="315.169479" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="340.271635" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="261.827399" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="280.654015" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="214.760857" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="57.872385" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="130.041082" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="136.316621" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="246.138551" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="286.929554" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="54.734615" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="268.102938" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="123.765543" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="330.858326" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="305.756171" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="324.582788" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="261.827399" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="211.623088" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="133.178851" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="224.174165" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="280.654015" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="45.321307" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="349.684943" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="108.076696" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="324.582788" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="214.760857" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="180.245393" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="155.143237" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="104.938926" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="130.041082" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="349.684943" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="180.245393" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="86.11231" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="79.836771" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="195.93424" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;use style="fill:#1f77b4;stroke:#1f77b4;" x="82.97454" xlink:href="#m8cc531e8e1" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="line2d_13"&gt;
&lt;defs&gt;
&lt;path d="M -25 25 
L 25 -25 
M -25 -25 
L 25 25 
" id="m3028f07e8d" style="stroke:#ff0000;"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g clip-path="url(#p087627c021)"&gt;
&lt;use style="fill:#ff0000;stroke:#ff0000;" x="89.410164" xlink:href="#m3028f07e8d" y="115.92"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;g id="patch_3"&gt;
&lt;path d="M 30.103125 224.64 
L 30.103125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_4"&gt;
&lt;path d="M 364.903125 224.64 
L 364.903125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_5"&gt;
&lt;path d="M 30.103125 224.64 
L 364.903125 224.64 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_6"&gt;
&lt;path d="M 30.103125 7.2 
L 364.903125 7.2 
" style="fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="patch_7"&gt;
&lt;path d="M 89.460164 80.463161 
Q 89.460164 92.190493 89.460164 103.917825 
L 95.410164 103.917825 
Q 92.410164 109.918913 89.410164 115.92 
Q 86.410164 109.918913 83.410164 103.917825 
L 89.360164 103.917825 
Q 89.360164 92.190493 89.360164 80.463161 
L 89.460164 80.463161 
z
" style="fill:#1f77b4;stroke:#000000;stroke-linecap:round;"&gt;&lt;/path&gt;
&lt;/g&gt;
&lt;g id="text_12"&gt;
&lt;!-- Harmonic Mean --&gt;
&lt;defs&gt;
&lt;path d="M 9.8125 72.90625 
L 19.671875 72.90625 
L 19.671875 43.015625 
L 55.515625 43.015625 
L 55.515625 72.90625 
L 65.375 72.90625 
L 65.375 0 
L 55.515625 0 
L 55.515625 34.71875 
L 19.671875 34.71875 
L 19.671875 0 
L 9.8125 0 
z
" id="DejaVuSans-72"&gt;&lt;/path&gt;
&lt;path d="M 34.28125 27.484375 
Q 23.390625 27.484375 19.1875 25 
Q 14.984375 22.515625 14.984375 16.5 
Q 14.984375 11.71875 18.140625 8.90625 
Q 21.296875 6.109375 26.703125 6.109375 
Q 34.1875 6.109375 38.703125 11.40625 
Q 43.21875 16.703125 43.21875 25.484375 
L 43.21875 27.484375 
z
M 52.203125 31.203125 
L 52.203125 0 
L 43.21875 0 
L 43.21875 8.296875 
Q 40.140625 3.328125 35.546875 0.953125 
Q 30.953125 -1.421875 24.3125 -1.421875 
Q 15.921875 -1.421875 10.953125 3.296875 
Q 6 8.015625 6 15.921875 
Q 6 25.140625 12.171875 29.828125 
Q 18.359375 34.515625 30.609375 34.515625 
L 43.21875 34.515625 
L 43.21875 35.40625 
Q 43.21875 41.609375 39.140625 45 
Q 35.0625 48.390625 27.6875 48.390625 
Q 23 48.390625 18.546875 47.265625 
Q 14.109375 46.140625 10.015625 43.890625 
L 10.015625 52.203125 
Q 14.9375 54.109375 19.578125 55.046875 
Q 24.21875 56 28.609375 56 
Q 40.484375 56 46.34375 49.84375 
Q 52.203125 43.703125 52.203125 31.203125 
z
" id="DejaVuSans-97"&gt;&lt;/path&gt;
&lt;path d="M 41.109375 46.296875 
Q 39.59375 47.171875 37.8125 47.578125 
Q 36.03125 48 33.890625 48 
Q 26.265625 48 22.1875 43.046875 
Q 18.109375 38.09375 18.109375 28.8125 
L 18.109375 0 
L 9.078125 0 
L 9.078125 54.6875 
L 18.109375 54.6875 
L 18.109375 46.1875 
Q 20.953125 51.171875 25.484375 53.578125 
Q 30.03125 56 36.53125 56 
Q 37.453125 56 38.578125 55.875 
Q 39.703125 55.765625 41.0625 55.515625 
z
" id="DejaVuSans-114"&gt;&lt;/path&gt;
&lt;path d="M 52 44.1875 
Q 55.375 50.25 60.0625 53.125 
Q 64.75 56 71.09375 56 
Q 79.640625 56 84.28125 50.015625 
Q 88.921875 44.046875 88.921875 33.015625 
L 88.921875 0 
L 79.890625 0 
L 79.890625 32.71875 
Q 79.890625 40.578125 77.09375 44.375 
Q 74.3125 48.1875 68.609375 48.1875 
Q 61.625 48.1875 57.5625 43.546875 
Q 53.515625 38.921875 53.515625 30.90625 
L 53.515625 0 
L 44.484375 0 
L 44.484375 32.71875 
Q 44.484375 40.625 41.703125 44.40625 
Q 38.921875 48.1875 33.109375 48.1875 
Q 26.21875 48.1875 22.15625 43.53125 
Q 18.109375 38.875 18.109375 30.90625 
L 18.109375 0 
L 9.078125 0 
L 9.078125 54.6875 
L 18.109375 54.6875 
L 18.109375 46.1875 
Q 21.1875 51.21875 25.484375 53.609375 
Q 29.78125 56 35.6875 56 
Q 41.65625 56 45.828125 52.96875 
Q 50 49.953125 52 44.1875 
z
" id="DejaVuSans-109"&gt;&lt;/path&gt;
&lt;path d="M 30.609375 48.390625 
Q 23.390625 48.390625 19.1875 42.75 
Q 14.984375 37.109375 14.984375 27.296875 
Q 14.984375 17.484375 19.15625 11.84375 
Q 23.34375 6.203125 30.609375 6.203125 
Q 37.796875 6.203125 41.984375 11.859375 
Q 46.1875 17.53125 46.1875 27.296875 
Q 46.1875 37.015625 41.984375 42.703125 
Q 37.796875 48.390625 30.609375 48.390625 
z
M 30.609375 56 
Q 42.328125 56 49.015625 48.375 
Q 55.71875 40.765625 55.71875 27.296875 
Q 55.71875 13.875 49.015625 6.21875 
Q 42.328125 -1.421875 30.609375 -1.421875 
Q 18.84375 -1.421875 12.171875 6.21875 
Q 5.515625 13.875 5.515625 27.296875 
Q 5.515625 40.765625 12.171875 48.375 
Q 18.84375 56 30.609375 56 
z
" id="DejaVuSans-111"&gt;&lt;/path&gt;
&lt;path d="M 54.890625 33.015625 
L 54.890625 0 
L 45.90625 0 
L 45.90625 32.71875 
Q 45.90625 40.484375 42.875 44.328125 
Q 39.84375 48.1875 33.796875 48.1875 
Q 26.515625 48.1875 22.3125 43.546875 
Q 18.109375 38.921875 18.109375 30.90625 
L 18.109375 0 
L 9.078125 0 
L 9.078125 54.6875 
L 18.109375 54.6875 
L 18.109375 46.1875 
Q 21.34375 51.125 25.703125 53.5625 
Q 30.078125 56 35.796875 56 
Q 45.21875 56 50.046875 50.171875 
Q 54.890625 44.34375 54.890625 33.015625 
z
" id="DejaVuSans-110"&gt;&lt;/path&gt;
&lt;path d="M 9.421875 54.6875 
L 18.40625 54.6875 
L 18.40625 0 
L 9.421875 0 
z
M 9.421875 75.984375 
L 18.40625 75.984375 
L 18.40625 64.59375 
L 9.421875 64.59375 
z
" id="DejaVuSans-105"&gt;&lt;/path&gt;
&lt;path d="M 48.78125 52.59375 
L 48.78125 44.1875 
Q 44.96875 46.296875 41.140625 47.34375 
Q 37.3125 48.390625 33.40625 48.390625 
Q 24.65625 48.390625 19.8125 42.84375 
Q 14.984375 37.3125 14.984375 27.296875 
Q 14.984375 17.28125 19.8125 11.734375 
Q 24.65625 6.203125 33.40625 6.203125 
Q 37.3125 6.203125 41.140625 7.25 
Q 44.96875 8.296875 48.78125 10.40625 
L 48.78125 2.09375 
Q 45.015625 0.34375 40.984375 -0.53125 
Q 36.96875 -1.421875 32.421875 -1.421875 
Q 20.0625 -1.421875 12.78125 6.34375 
Q 5.515625 14.109375 5.515625 27.296875 
Q 5.515625 40.671875 12.859375 48.328125 
Q 20.21875 56 33.015625 56 
Q 37.15625 56 41.109375 55.140625 
Q 45.0625 54.296875 48.78125 52.59375 
z
" id="DejaVuSans-99"&gt;&lt;/path&gt;
&lt;path id="DejaVuSans-32"&gt;&lt;/path&gt;
&lt;path d="M 9.8125 72.90625 
L 24.515625 72.90625 
L 43.109375 23.296875 
L 61.8125 72.90625 
L 76.515625 72.90625 
L 76.515625 0 
L 66.890625 0 
L 66.890625 64.015625 
L 48.09375 14.015625 
L 38.1875 14.015625 
L 19.390625 64.015625 
L 19.390625 0 
L 9.8125 0 
z
" id="DejaVuSans-77"&gt;&lt;/path&gt;
&lt;path d="M 56.203125 29.59375 
L 56.203125 25.203125 
L 14.890625 25.203125 
Q 15.484375 15.921875 20.484375 11.0625 
Q 25.484375 6.203125 34.421875 6.203125 
Q 39.59375 6.203125 44.453125 7.46875 
Q 49.3125 8.734375 54.109375 11.28125 
L 54.109375 2.78125 
Q 49.265625 0.734375 44.1875 -0.34375 
Q 39.109375 -1.421875 33.890625 -1.421875 
Q 20.796875 -1.421875 13.15625 6.1875 
Q 5.515625 13.8125 5.515625 26.8125 
Q 5.515625 40.234375 12.765625 48.109375 
Q 20.015625 56 32.328125 56 
Q 43.359375 56 49.78125 48.890625 
Q 56.203125 41.796875 56.203125 29.59375 
z
M 47.21875 32.234375 
Q 47.125 39.59375 43.09375 43.984375 
Q 39.0625 48.390625 32.421875 48.390625 
Q 24.90625 48.390625 20.390625 44.140625 
Q 15.875 39.890625 15.1875 32.171875 
z
" id="DejaVuSans-101"&gt;&lt;/path&gt;
&lt;/defs&gt;
&lt;g transform="translate(89.410164 76.385455)scale(0.1 -0.1)"&gt;
&lt;use xlink:href="#DejaVuSans-72"&gt;&lt;/use&gt;
&lt;use x="75.195312" xlink:href="#DejaVuSans-97"&gt;&lt;/use&gt;
&lt;use x="136.474609" xlink:href="#DejaVuSans-114"&gt;&lt;/use&gt;
&lt;use x="175.837891" xlink:href="#DejaVuSans-109"&gt;&lt;/use&gt;
&lt;use x="273.25" xlink:href="#DejaVuSans-111"&gt;&lt;/use&gt;
&lt;use x="334.431641" xlink:href="#DejaVuSans-110"&gt;&lt;/use&gt;
&lt;use x="397.810547" xlink:href="#DejaVuSans-105"&gt;&lt;/use&gt;
&lt;use x="425.59375" xlink:href="#DejaVuSans-99"&gt;&lt;/use&gt;
&lt;use x="480.574219" xlink:href="#DejaVuSans-32"&gt;&lt;/use&gt;
&lt;use x="512.361328" xlink:href="#DejaVuSans-77"&gt;&lt;/use&gt;
&lt;use x="598.640625" xlink:href="#DejaVuSans-101"&gt;&lt;/use&gt;
&lt;use x="660.164062" xlink:href="#DejaVuSans-97"&gt;&lt;/use&gt;
&lt;use x="721.443359" xlink:href="#DejaVuSans-110"&gt;&lt;/use&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;defs&gt;
&lt;clippath id="p087627c021"&gt;
&lt;rect height="217.44" width="334.8" x="30.103125" y="7.2"&gt;&lt;/rect&gt;
&lt;/clippath&gt;
&lt;/defs&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [8]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"Mode: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;statistics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"Median: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;statistics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"Arithmetic Mean: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;arithmetic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"Geometric Mean: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;geometric_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"Harmonic Mean: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;harmonic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Mode: 4
Median: 40.0
Arithmetic Mean: 47.02
Geometric Mean: 32.54181835292063
Harmonic Mean: 15.05101860509987
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;blockquote&gt;&lt;p&gt;Thank you to Andrew Goodwin over on Twitter: &lt;a href="https://twitter.com/ndrewg/status/1296773835585236997"&gt;https://twitter.com/ndrewg/status/1296773835585236997&lt;/a&gt; for suggesting some extremely interesting further reading on &lt;a href="https://en.m.wikipedia.org/wiki/Anscombe%27s_quartet"&gt;Anscombe's Quartet&lt;/a&gt; and &lt;a href="https://www.autodeskresearch.com/publications/samestats"&gt;The Datasaurus Dozen&lt;/a&gt;, which are examples of why summary statistics matter of exactly the meaning of this post!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/body&gt;</content><category term="Data Science"></category><category term="datascience"></category><category term="python"></category></entry><entry><title>Dataclasses vs Attrs vs Pydantic</title><link href="https://jackmckew.dev/dataclasses-vs-attrs-vs-pydantic.html" rel="alternate"></link><published>2020-08-07T00:00:00+10:00</published><updated>2020-08-07T00:00:00+10:00</updated><author><name>Jack McKew</name></author><id>tag:jackmckew.dev,2020-08-07:/dataclasses-vs-attrs-vs-pydantic.html</id><summary type="html">&lt;body&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Python 3.7 introduced dataclasses, a handy decorator that can make creating classes so much easier and seamless. This post will go into comparing a regular class, a 'dataclass' and a class using attrs. Dataclasses were based on attrs, which is a python package that also aims to make creating …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;</summary><content type="html">&lt;body&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Python 3.7 introduced dataclasses, a handy decorator that can make creating classes so much easier and seamless. This post will go into comparing a regular class, a 'dataclass' and a class using attrs. Dataclasses were based on attrs, which is a python package that also aims to make creating classes a much more enjoyable experience. Dataclasses are included in the standard library (provided 3.7+), while to enable attrs, it must be installed with pip (eg, &lt;code&gt;pip install attrs&lt;/code&gt;). Mainly they are for automating the (sometimes) painful experience of writing dunder methods. You can read more about dunder methods in a prevous post here: &lt;a href="https://jackmckew.dev/dunders-in-python.html"&gt;https://jackmckew.dev/dunders-in-python.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Dataclasses-vs-Attrs-vs-Pydantic:-Features"&gt;Dataclasses vs Attrs vs Pydantic: Features&lt;a class="anchor-link" href="#Dataclasses-vs-Attrs-vs-Pydantic:-Features"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;table class="table table-striped"&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th style="text-align:center"&gt;Dataclass&lt;/th&gt;
&lt;th style="text-align:center"&gt;Attrs&lt;/th&gt;
&lt;th style="text-align:center"&gt;Pydantic&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;frozen&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;defaults&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;totuple&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;todict&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;validators&lt;/td&gt;
&lt;td style="text-align:center"&gt;❌&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;converters&lt;/td&gt;
&lt;td style="text-align:center"&gt;❌&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;slotted&lt;/td&gt;
&lt;td style="text-align:center"&gt;❌&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;td style="text-align:center"&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;programmatic creation&lt;/td&gt;
&lt;td style="text-align:center"&gt;❌&lt;/td&gt;
&lt;td style="text-align:center"&gt;✅&lt;/td&gt;
&lt;td style="text-align:center"&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="When-to-use-Dataclasses"&gt;When to use Dataclasses&lt;a class="anchor-link" href="#When-to-use-Dataclasses"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Dataclasses are mainly about 'grouping' variables together. Choose dataclasses if:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The main concern is around the type of the variable, not the value&lt;/li&gt;
&lt;li&gt;Adding another package dependancy isn't trivial&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="When-to-use-Attrs"&gt;When to use Attrs&lt;a class="anchor-link" href="#When-to-use-Attrs"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Attrs are about both grouping &amp;amp; validating. Choose attrs if:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You're concerned around the performance (attrs supports slotted class generation which are optimized for CPython)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="When-to-use-Pydantic"&gt;When to use Pydantic&lt;a class="anchor-link" href="#When-to-use-Pydantic"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Pydantic is about thorough data validation. Choose &lt;code&gt;pydantic&lt;/code&gt; if:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You want to validate the values inside each class&lt;/li&gt;
&lt;li&gt;You want to santise the input&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Example-Class"&gt;Example Class&lt;a class="anchor-link" href="#Example-Class"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;First off let's start with our example class in the default way that it would be implemented in Python.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;We will also use type hints in our class defintions, this is best practice for ensuring our variables are the type we intend them to be. Type hints are also integrated into attrs for creating classes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [1]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;typing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The arguments passed to the &lt;code&gt;__init__&lt;/code&gt; constructor are duplicated when instantiating the parameters of the class with the same arguments. This wouldn't typically be the case if the arguments and the parameters don't match. Luckily this is something that both dataclasses and attrs can help with (which we'll see later on).&lt;/p&gt;
&lt;p&gt;Now to demonstrate all the different things that both dataclasses &amp;amp; attrs automates for us, let's define a function which takes in the class constructor and prints out all the different elements for each of our classes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [2]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;class_tester&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;class_constructor&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;test_class_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;class_constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;test_class_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;class_constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"Repr/str dunder method representation: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;test_class_1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"Equality dunder method (using ==) (should be True if implemented): &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;test_class_1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;test_class_2&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;"Equality dunder method (using is) (should be True if implemented): &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;test_class_1&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;test_class_2&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;class_tester&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Repr/str dunder method representation: &amp;lt;__main__.Data object at 0x00000269A5758A90&amp;gt;
Equality dunder method (using ==) (should be True if implemented): False
Equality dunder method (using is) (should be True if implemented): False
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Dataclasses"&gt;Dataclasses&lt;a class="anchor-link" href="#Dataclasses"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Dataclasses by default automatically initialise a bunch of dunder methods for us in a class such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__init__&lt;/code&gt; The initialisation method for the class&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__repr__&lt;/code&gt; How the class is represented with print() is called&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__str__&lt;/code&gt; How the class is represented as a string (called with &lt;code&gt;__repr__&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__eq__&lt;/code&gt; Used when equality operators are used (eg, &lt;code&gt;==&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__hash__&lt;/code&gt; The hash for the class (called with &lt;code&gt;__eq__&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There's also a stack of other dunder methods that can also be automated which are detailed at: &lt;a href="https://docs.python.org/3/library/dataclasses.html"&gt;https://docs.python.org/3/library/dataclasses.html&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Thank you to &lt;a href="https://twitter.com/ElevenPhonons"&gt;Michael Kosher&lt;/a&gt; over on Twitter: &lt;em&gt;It's worth noting validation can be added to dataclasses using a __post_init hook. However, it's pretty low level relative to attrs/#pydantic. I did a similar comparison &lt;a href="https://mpkocher.github.io/2019/05/22/Dataclasses-in-Python-3-7/"&gt;https://mpkocher.github.io/2019/05/22/Dataclasses-in-Python-3-7/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [3]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dataclasses&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;dataclass&lt;/span&gt;

&lt;span class="nd"&gt;@dataclass&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
    &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;typing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;

&lt;span class="n"&gt;class_tester&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Repr/str dunder method representation: Data(x=None, y=None, kwargs=None)
Equality dunder method (using ==) (should be True if implemented): True
Equality dunder method (using is) (should be True if implemented): False
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Finally we have our attrs class, there is two main 'functions' apart of attrs which are &lt;code&gt;attr.s&lt;/code&gt; and &lt;code&gt;attr.ib()&lt;/code&gt;. &lt;code&gt;attr.s&lt;/code&gt; is the decorator to put on a class to have the package initialise the dunder methods for us, while &lt;code&gt;attr.ib()&lt;/code&gt; can be used (optional) for defining the parameters of the class. There is lots of optional arguments for both &lt;code&gt;attr.s&lt;/code&gt; and &lt;code&gt;attr.ib()&lt;/code&gt;, which documented at: &lt;a href="https://www.attrs.org/en/stable/api.html"&gt;https://www.attrs.org/en/stable/api.html&lt;/a&gt;. Mainly the optional arguments are for enabling/disabling the differing dunder methods in the class.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [4]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;attr&lt;/span&gt;

&lt;span class="nd"&gt;@attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;typing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;class_tester&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Repr/str dunder method representation: Data(x=None, y=None, kwargs=None)
Equality dunder method (using ==) (should be True if implemented): True
Equality dunder method (using is) (should be True if implemented): False
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Attrs"&gt;Attrs&lt;a class="anchor-link" href="#Attrs"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Next let's dive into &lt;code&gt;attrs&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="Validators-in-attrs"&gt;Validators in attrs&lt;a class="anchor-link" href="#Validators-in-attrs"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;One major functionality that &lt;code&gt;attrs&lt;/code&gt; has but dataclasses doesn't, is validators. This enables us to ensure that when our classes are being created that we validate the inputs to any specific values. Let's build an example that ensure our parameter &lt;code&gt;x&lt;/code&gt; is greater than 42, and if not raise an error to the user.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [5]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;attr&lt;/span&gt;

&lt;span class="nd"&gt;@attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ValidatedData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;validator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;validators&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;typing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nd"&gt;@x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;validator&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;more_than_the_meaning_of_life&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Must be more than the meaning of life!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;test_data_point_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ValidatedData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;test_data_point_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ValidatedData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_text output_error"&gt;
&lt;pre&gt;&lt;span class="ansi-red-intense-fg ansi-bold"&gt;---------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="ansi-red-intense-fg ansi-bold"&gt;ValueError&lt;/span&gt;                                Traceback (most recent call last)
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;&amp;lt;ipython-input-5-1f0c941b3dd2&amp;gt;&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;&amp;lt;module&amp;gt;&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;     14&lt;/span&gt; test_data_point_1 &lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;=&lt;/span&gt; ValidatedData&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;&lt;span class="ansi-cyan-intense-fg ansi-bold"&gt;42&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;     15&lt;/span&gt; 
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;---&amp;gt; 16&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt; &lt;/span&gt;test_data_point_2 &lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;=&lt;/span&gt; ValidatedData&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;-&lt;/span&gt;&lt;span class="ansi-cyan-intense-fg ansi-bold"&gt;35&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt;

&lt;span class="ansi-green-intense-fg ansi-bold"&gt;&amp;lt;attrs generated init __main__.ValidatedData&amp;gt;&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;__init__&lt;/span&gt;&lt;span class="ansi-blue-intense-fg ansi-bold"&gt;(self, x, y, kwargs)&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;      4&lt;/span&gt;     self&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;.&lt;/span&gt;kwargs &lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;=&lt;/span&gt; kwargs
&lt;span class="ansi-green-fg"&gt;      5&lt;/span&gt;     &lt;span class="ansi-green-intense-fg ansi-bold"&gt;if&lt;/span&gt; _config&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;.&lt;/span&gt;_run_validators &lt;span class="ansi-green-intense-fg ansi-bold"&gt;is&lt;/span&gt; &lt;span class="ansi-green-intense-fg ansi-bold"&gt;True&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;:&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;----&amp;gt; 6&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;         &lt;/span&gt;__attr_validator_x&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;self&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;,&lt;/span&gt; __attr_x&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;,&lt;/span&gt; self&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;.&lt;/span&gt;x&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt;

&lt;span class="ansi-green-intense-fg ansi-bold"&gt;c:\Users\jackm\Documents\GitHub\jackmckew.dev\drafts\2020\dataclasses-vs-attrs\.env\lib\site-packages\attr\_make.py&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;__call__&lt;/span&gt;&lt;span class="ansi-blue-intense-fg ansi-bold"&gt;(self, inst, attr, value)&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;   2144&lt;/span&gt;     &lt;span class="ansi-green-intense-fg ansi-bold"&gt;def&lt;/span&gt; __call__&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;self&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;,&lt;/span&gt; inst&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;,&lt;/span&gt; attr&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;,&lt;/span&gt; value&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;:&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;   2145&lt;/span&gt;         &lt;span class="ansi-green-intense-fg ansi-bold"&gt;for&lt;/span&gt; v &lt;span class="ansi-green-intense-fg ansi-bold"&gt;in&lt;/span&gt; self&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;.&lt;/span&gt;_validators&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;:&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;-&amp;gt; 2146&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;             &lt;/span&gt;v&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;inst&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;,&lt;/span&gt; attr&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;,&lt;/span&gt; value&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;   2147&lt;/span&gt; 
&lt;span class="ansi-green-fg"&gt;   2148&lt;/span&gt; 

&lt;span class="ansi-green-intense-fg ansi-bold"&gt;&amp;lt;ipython-input-5-1f0c941b3dd2&amp;gt;&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;more_than_the_meaning_of_life&lt;/span&gt;&lt;span class="ansi-blue-intense-fg ansi-bold"&gt;(self, attribute, value)&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;     10&lt;/span&gt;     &lt;span class="ansi-green-intense-fg ansi-bold"&gt;def&lt;/span&gt; more_than_the_meaning_of_life&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;self&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;,&lt;/span&gt; attribute&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;,&lt;/span&gt; value&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;:&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;     11&lt;/span&gt;         &lt;span class="ansi-green-intense-fg ansi-bold"&gt;if&lt;/span&gt; &lt;span class="ansi-green-intense-fg ansi-bold"&gt;not&lt;/span&gt; value &lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="ansi-cyan-intense-fg ansi-bold"&gt;42&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;:&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;---&amp;gt; 12&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;             &lt;/span&gt;&lt;span class="ansi-green-intense-fg ansi-bold"&gt;raise&lt;/span&gt; ValueError&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;&lt;span class="ansi-blue-intense-fg ansi-bold"&gt;"Must be more than the meaning of life!"&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;     13&lt;/span&gt; 
&lt;span class="ansi-green-fg"&gt;     14&lt;/span&gt; test_data_point_1 &lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;=&lt;/span&gt; ValidatedData&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;&lt;span class="ansi-cyan-intense-fg ansi-bold"&gt;42&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt;

&lt;span class="ansi-red-intense-fg ansi-bold"&gt;ValueError&lt;/span&gt;: Must be more than the meaning of life!&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Converters-in-Attrs"&gt;Converters in Attrs&lt;a class="anchor-link" href="#Converters-in-Attrs"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Converters are used for the sanitisation of the input data when creating classes. If we want to support our users to create our parameters which are intended to be integers, we can santise this input with converters. This let's our classes be much more flexible with our users while still keeping stability in the typing behind the parameters.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [6]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;attr&lt;/span&gt;

&lt;span class="nd"&gt;@attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ConvertedData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;converter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;typing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nd"&gt;@x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;validator&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;more_than_the_meaning_of_life&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Must be more than the meaning of life!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;test_data_point_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ConvertedData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test_data_point_1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;test_data_point_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ConvertedData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"42"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test_data_point_2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;ConvertedData(x=42, y=None, kwargs=None)
ConvertedData(x=42, y=None, kwargs=None)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Programmatic-Creation-of-Attrs"&gt;Programmatic Creation of Attrs&lt;a class="anchor-link" href="#Programmatic-Creation-of-Attrs"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;In some cases you may want to create classes programmatically, well attrs doesn't let us down and provides a method for us! We can easily just pass a dictionary of all the parameters we need.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [7]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ProgrammaticData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_class&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Data"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'x'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                            &lt;span class="s1"&gt;'y'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                            &lt;span class="s1"&gt;'kwargs'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
                            &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ProgrammaticData&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Data(x=None, y=None, kwargs=None)
Data(x=None, y=None, kwargs=None)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="PyDantic-Dataclasses"&gt;PyDantic Dataclasses&lt;a class="anchor-link" href="#PyDantic-Dataclasses"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Pydantic&lt;/code&gt; is a python package for data validation and settings management using python type annotations. Perfect, this is what we were trying to do with dataclasses and attrs. Even more so &lt;code&gt;pydantic&lt;/code&gt; provides a dataclass decorator to enable data validation on our dataclasses. This enables us to create extensible classes with data validation even easier than &lt;code&gt;attrs&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;The biggest benefit here, is now, by default the type annotations are enforced at runtime and any invalid data raises a nicely formatted error.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [8]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pydantic.dataclasses&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;dataclass&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt;

&lt;span class="nd"&gt;@dataclass&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
    &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;typing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;

&lt;span class="n"&gt;class_tester&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Repr/str dunder method representation: Data(x=None, y=None, kwargs=None)
Equality dunder method (using ==) (should be True if implemented): True
Equality dunder method (using is) (should be True if implemented): False
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;code&gt;pydantic&lt;/code&gt; also automatically implements conversion &amp;amp; data validation, let's test this out.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [9]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;test_data_point&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'123'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test_data_point&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'t'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;Data(x=123.0, y=None, kwargs=None)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_text output_error"&gt;
&lt;pre&gt;&lt;span class="ansi-red-intense-fg ansi-bold"&gt;---------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="ansi-red-intense-fg ansi-bold"&gt;ValidationError&lt;/span&gt;                           Traceback (most recent call last)
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;&amp;lt;ipython-input-9-67163ff1f554&amp;gt;&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;&amp;lt;module&amp;gt;&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;      1&lt;/span&gt; test_data_point &lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;=&lt;/span&gt; Data&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;x&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;=&lt;/span&gt;&lt;span class="ansi-blue-intense-fg ansi-bold"&gt;'123'&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;      2&lt;/span&gt; print&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;test_data_point&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;----&amp;gt; 3&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt; &lt;/span&gt;Data&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;x&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;=&lt;/span&gt;&lt;span class="ansi-blue-intense-fg ansi-bold"&gt;'t'&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt;

&lt;span class="ansi-green-intense-fg ansi-bold"&gt;&amp;lt;string&amp;gt;&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;__init__&lt;/span&gt;&lt;span class="ansi-blue-intense-fg ansi-bold"&gt;(self, x, y, kwargs)&lt;/span&gt;

&lt;span class="ansi-green-intense-fg ansi-bold"&gt;c:\Users\jackm\Documents\GitHub\jackmckew.dev\drafts\2020\dataclasses-vs-attrs\.env\lib\site-packages\pydantic\dataclasses.cp38-win_amd64.pyd&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;pydantic.dataclasses._process_class._pydantic_post_init&lt;/span&gt;&lt;span class="ansi-blue-intense-fg ansi-bold"&gt;()&lt;/span&gt;

&lt;span class="ansi-red-intense-fg ansi-bold"&gt;ValidationError&lt;/span&gt;: 1 validation error for Data
x
  value is not a valid float (type=type_error.float)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;As we can see above, it gives the developers a nicely formatted error message when the data validation failed, and smoothly sanitises the input when it needs to.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/body&gt;</content><category term="Data Science"></category><category term="datascience"></category><category term="python"></category></entry><entry><title>Generators in Python</title><link href="https://jackmckew.dev/generators-in-python.html" rel="alternate"></link><published>2020-07-30T00:00:00+10:00</published><updated>2020-07-30T00:00:00+10:00</updated><author><name>Jack McKew</name></author><id>tag:jackmckew.dev,2020-07-30:/generators-in-python.html</id><summary type="html">&lt;body&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Generators are a special type of function in python, letting you 'lazy load' data; a function becomes a generator is with the &lt;code&gt;yield&lt;/code&gt; statement. Lazy loading is when you access just a portion of a data set that you are interested in (eg, the part you are working with), as …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;</summary><content type="html">&lt;body&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Generators are a special type of function in python, letting you 'lazy load' data; a function becomes a generator is with the &lt;code&gt;yield&lt;/code&gt; statement. Lazy loading is when you access just a portion of a data set that you are interested in (eg, the part you are working with), as opposed to loading the entire data set. While this gives marginal increases in efficiency/speed with small data sets, it can provide dramatic improvements on larger data sets; especially if you are using a system with limited memory.&lt;/p&gt;
&lt;p&gt;Before we dive into some examples on where you could use generators, let's look where you should &lt;strong&gt;not&lt;/strong&gt; use generators:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the data needs to be accessed &lt;strong&gt;multiple&lt;/strong&gt; times (eg, &lt;code&gt;join&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;need to access the data &lt;strong&gt;randomly&lt;/strong&gt; (or any other method of access that's not forward)&lt;/li&gt;
&lt;li&gt;using a different compiler&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some examples where you should use generators are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you don't know if you'll need &lt;strong&gt;all&lt;/strong&gt; the results&lt;/li&gt;
&lt;li&gt;you don't want to allocate all the results into memory&lt;/li&gt;
&lt;li&gt;you don't know how many results there may be (eg, user interaction)&lt;/li&gt;
&lt;li&gt;a potentially infinite series&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A great example use is that of a search, it could be implemented to gather all the elements to search and return them after the search is complete. Rather by using a generator you can return the results as they are found!&lt;/p&gt;
&lt;p&gt;First off, let's start with the hello world of generators, the fibonacci sequence. If you don't know what the fibonacci sequence is, it's just adding the number that precedes itself and so on (eg, 1,1,2,3,5,8,etc), this is an infinite series.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [1]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fibon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="s2"&gt;"Generator version"&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fibon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;1
1
2
3
5
8
13
21
34
55
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;You can also generate the entire sequence into memory by using the list function on the generator function!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [2]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fibon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;If we were to use a function for this instead, which compiles the entire list of the fibonacci sequence before returning, this would mean &lt;code&gt;fibon(number_of_elements)&lt;/code&gt; would need to be computed and stored in memory. By using generators we can provide &lt;code&gt;fibon(number_of_elements)&lt;/code&gt; any number of elements and only the latest and it's preceding value are stored in memory.&lt;/p&gt;
&lt;p&gt;Now imagine if you had a database with 100 million records, and you needed to calculate something for every single row. If you tried to retrieve the entire database and store it in memory, it would possibly just fall over. Rather by using a generator we can iterate through the database in smaller chunks. Another handy feature is to have separate generator instances which you can interweave throughout your project if you need to maintain multiple states in a simplistic manner.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;In this example, the entire 'data set' is stored in memory, but in a real use we'd request the small chunk from a database&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The generator function returns a generator object, so to get each 'iteration' we use the &lt;code&gt;next&lt;/code&gt; function.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [3]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;load_big_data&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;batch_process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chunksize&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;itertools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;zip_longest&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;grouper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iterable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fillvalue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iterable&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;zip_longest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fillvalue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fillvalue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# While big_data is currently stored entirely in memory, if you are requesting from an external database you could just fetch n results&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;load_big_data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;grouper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chunksize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;batch_processor_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;batch_process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;batch_processor_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;batch_process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;batch_processor_1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;batch_processor_1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;batch_processor_2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;batch_processor_1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;[0, 1, 2, 3, 4]
[5, 6, 7, 8, 9]
[0, 1, 2]
[10, 11, 12, 13, 14]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Another good example is to use generators for user interaction (UI), where the program is waiting on the user to input something, but you don't know how long the program will have to wait for interaction. This enables the program to run until the user decides to close it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [4]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;user_input&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;cmd&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_input&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="c1"&gt;# Do something with command&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;hello computer
i am user

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_area"&gt;
&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_text output_error"&gt;
&lt;pre&gt;&lt;span class="ansi-red-intense-fg ansi-bold"&gt;---------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="ansi-red-intense-fg ansi-bold"&gt;KeyboardInterrupt&lt;/span&gt;                         Traceback (most recent call last)
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;&amp;lt;ipython-input-4-3e09f71ee7b6&amp;gt;&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;&amp;lt;module&amp;gt;&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;      4&lt;/span&gt;         &lt;span class="ansi-green-intense-fg ansi-bold"&gt;yield&lt;/span&gt; cmd
&lt;span class="ansi-green-fg"&gt;      5&lt;/span&gt; 
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;----&amp;gt; 6&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt; &lt;/span&gt;&lt;span class="ansi-green-intense-fg ansi-bold"&gt;for&lt;/span&gt; command &lt;span class="ansi-green-intense-fg ansi-bold"&gt;in&lt;/span&gt; user_input&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;:&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;      7&lt;/span&gt;     &lt;span class="ansi-red-intense-fg ansi-bold"&gt;# Do something with command&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;      8&lt;/span&gt;     print&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;command&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt;

&lt;span class="ansi-green-intense-fg ansi-bold"&gt;&amp;lt;ipython-input-4-3e09f71ee7b6&amp;gt;&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;user_input&lt;/span&gt;&lt;span class="ansi-blue-intense-fg ansi-bold"&gt;()&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;      1&lt;/span&gt; &lt;span class="ansi-green-intense-fg ansi-bold"&gt;def&lt;/span&gt; user_input&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;:&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;      2&lt;/span&gt;     &lt;span class="ansi-green-intense-fg ansi-bold"&gt;while&lt;/span&gt; &lt;span class="ansi-green-intense-fg ansi-bold"&gt;True&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;:&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;----&amp;gt; 3&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;         &lt;/span&gt;cmd &lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;=&lt;/span&gt; input&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;      4&lt;/span&gt;         &lt;span class="ansi-green-intense-fg ansi-bold"&gt;yield&lt;/span&gt; cmd
&lt;span class="ansi-green-fg"&gt;      5&lt;/span&gt; 

&lt;span class="ansi-green-intense-fg ansi-bold"&gt;c:\Users\jackm\Documents\GitHub\jackmckew.dev\drafts\2020\generators-in-python\.env\lib\site-packages\ipykernel\kernelbase.py&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;raw_input&lt;/span&gt;&lt;span class="ansi-blue-intense-fg ansi-bold"&gt;(self, prompt)&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;    858&lt;/span&gt;                 &lt;span class="ansi-blue-intense-fg ansi-bold"&gt;"raw_input was called, but this frontend does not support input requests."&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;    859&lt;/span&gt;             )
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;--&amp;gt; 860&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;         return self._input_request(str(prompt),
&lt;/span&gt;&lt;span class="ansi-green-fg"&gt;    861&lt;/span&gt;             self&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;.&lt;/span&gt;_parent_ident&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;,&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;    862&lt;/span&gt;             self&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;.&lt;/span&gt;_parent_header&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;,&lt;/span&gt;

&lt;span class="ansi-green-intense-fg ansi-bold"&gt;c:\Users\jackm\Documents\GitHub\jackmckew.dev\drafts\2020\generators-in-python\.env\lib\site-packages\ipykernel\kernelbase.py&lt;/span&gt; in &lt;span class="ansi-cyan-fg"&gt;_input_request&lt;/span&gt;&lt;span class="ansi-blue-intense-fg ansi-bold"&gt;(self, prompt, ident, parent, password)&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;    902&lt;/span&gt;             &lt;span class="ansi-green-intense-fg ansi-bold"&gt;except&lt;/span&gt; KeyboardInterrupt&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;:&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;    903&lt;/span&gt;                 &lt;span class="ansi-red-intense-fg ansi-bold"&gt;# re-raise KeyboardInterrupt, to truncate traceback&lt;/span&gt;
&lt;span class="ansi-green-intense-fg ansi-bold"&gt;--&amp;gt; 904&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;                 &lt;/span&gt;&lt;span class="ansi-green-intense-fg ansi-bold"&gt;raise&lt;/span&gt; KeyboardInterrupt&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;&lt;span class="ansi-blue-intense-fg ansi-bold"&gt;"Interrupted by user"&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt; &lt;span class="ansi-green-intense-fg ansi-bold"&gt;from&lt;/span&gt; &lt;span class="ansi-green-intense-fg ansi-bold"&gt;None&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;    905&lt;/span&gt;             &lt;span class="ansi-green-intense-fg ansi-bold"&gt;except&lt;/span&gt; Exception &lt;span class="ansi-green-intense-fg ansi-bold"&gt;as&lt;/span&gt; e&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;:&lt;/span&gt;
&lt;span class="ansi-green-fg"&gt;    906&lt;/span&gt;                 self&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;.&lt;/span&gt;log&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;.&lt;/span&gt;warning&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;(&lt;/span&gt;&lt;span class="ansi-blue-intense-fg ansi-bold"&gt;"Invalid Message:"&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;,&lt;/span&gt; exc_info&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;=&lt;/span&gt;&lt;span class="ansi-green-intense-fg ansi-bold"&gt;True&lt;/span&gt;&lt;span class="ansi-yellow-intense-fg ansi-bold"&gt;)&lt;/span&gt;

&lt;span class="ansi-red-intense-fg ansi-bold"&gt;KeyboardInterrupt&lt;/span&gt;: Interrupted by user&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/body&gt;</content><category term="Data Science"></category><category term="datascience"></category><category term="python"></category></entry></feed>